[{"name":"abstract fun clearActionsHistory()","description":"com.daftmobile.redukt.test.assertions.ActionsAssertScope.clearActionsHistory","location":"redukt-test/com.daftmobile.redukt.test.assertions/-actions-assert-scope/clear-actions-history.html","searchKeys":["clearActionsHistory","abstract fun clearActionsHistory()","com.daftmobile.redukt.test.assertions.ActionsAssertScope.clearActionsHistory"]},{"name":"abstract fun onDispatch(block: MutableDispatchScope<State>.(Action) -> Unit)","description":"com.daftmobile.redukt.test.MutableDispatchScope.onDispatch","location":"redukt-test/com.daftmobile.redukt.test/-mutable-dispatch-scope/on-dispatch.html","searchKeys":["onDispatch","abstract fun onDispatch(block: MutableDispatchScope<State>.(Action) -> Unit)","com.daftmobile.redukt.test.MutableDispatchScope.onDispatch"]},{"name":"abstract fun onNext(block: MutableDispatchScope<State>.(Action) -> Unit)","description":"com.daftmobile.redukt.test.middleware.MiddlewareTestScope.onNext","location":"redukt-test/com.daftmobile.redukt.test.middleware/-middleware-test-scope/on-next.html","searchKeys":["onNext","abstract fun onNext(block: MutableDispatchScope<State>.(Action) -> Unit)","com.daftmobile.redukt.test.middleware.MiddlewareTestScope.onNext"]},{"name":"abstract fun pull(): T","description":"com.daftmobile.redukt.test.tools.Queue.pull","location":"redukt-test/com.daftmobile.redukt.test.tools/-queue/pull.html","searchKeys":["pull","abstract fun pull(): T","com.daftmobile.redukt.test.tools.Queue.pull"]},{"name":"abstract fun pullOrNull(): T?","description":"com.daftmobile.redukt.test.tools.Queue.pullOrNull","location":"redukt-test/com.daftmobile.redukt.test.tools/-queue/pull-or-null.html","searchKeys":["pullOrNull","abstract fun pullOrNull(): T?","com.daftmobile.redukt.test.tools.Queue.pullOrNull"]},{"name":"abstract fun push(item: T)","description":"com.daftmobile.redukt.test.tools.Queue.push","location":"redukt-test/com.daftmobile.redukt.test.tools/-queue/push.html","searchKeys":["push","abstract fun push(item: T)","com.daftmobile.redukt.test.tools.Queue.push"]},{"name":"abstract fun test(strict: Boolean? = null, block: ActionsAssertScope.() -> Unit)","description":"com.daftmobile.redukt.test.tools.TestStore.test","location":"redukt-test/com.daftmobile.redukt.test.tools/-test-store/test.html","searchKeys":["test","abstract fun test(strict: Boolean? = null, block: ActionsAssertScope.() -> Unit)","com.daftmobile.redukt.test.tools.TestStore.test"]},{"name":"abstract fun testAction(action: Action)","description":"com.daftmobile.redukt.test.middleware.MiddlewareTestScope.testAction","location":"redukt-test/com.daftmobile.redukt.test.middleware/-middleware-test-scope/test-action.html","searchKeys":["testAction","abstract fun testAction(action: Action)","com.daftmobile.redukt.test.middleware.MiddlewareTestScope.testAction"]},{"name":"abstract fun verifyNext(block: ActionsAssertScope.() -> Unit)","description":"com.daftmobile.redukt.test.middleware.MiddlewareTestScope.verifyNext","location":"redukt-test/com.daftmobile.redukt.test.middleware/-middleware-test-scope/verify-next.html","searchKeys":["verifyNext","abstract fun verifyNext(block: ActionsAssertScope.() -> Unit)","com.daftmobile.redukt.test.middleware.MiddlewareTestScope.verifyNext"]},{"name":"abstract override val state: MutableStateFlow<State>","description":"com.daftmobile.redukt.test.tools.TestStore.state","location":"redukt-test/com.daftmobile.redukt.test.tools/-test-store/state.html","searchKeys":["state","abstract override val state: MutableStateFlow<State>","com.daftmobile.redukt.test.tools.TestStore.state"]},{"name":"abstract val history: List<Action>","description":"com.daftmobile.redukt.test.assertions.ActionsAssertScope.history","location":"redukt-test/com.daftmobile.redukt.test.assertions/-actions-assert-scope/history.html","searchKeys":["history","abstract val history: List<Action>","com.daftmobile.redukt.test.assertions.ActionsAssertScope.history"]},{"name":"abstract val strict: Boolean","description":"com.daftmobile.redukt.test.tools.TestStore.strict","location":"redukt-test/com.daftmobile.redukt.test.tools/-test-store/strict.html","searchKeys":["strict","abstract val strict: Boolean","com.daftmobile.redukt.test.tools.TestStore.strict"]},{"name":"abstract val unverified: Queue<Action>","description":"com.daftmobile.redukt.test.assertions.ActionsAssertScope.unverified","location":"redukt-test/com.daftmobile.redukt.test.assertions/-actions-assert-scope/unverified.html","searchKeys":["unverified","abstract val unverified: Queue<Action>","com.daftmobile.redukt.test.assertions.ActionsAssertScope.unverified"]},{"name":"abstract var closure: DispatchClosure","description":"com.daftmobile.redukt.test.MutableDispatchScope.closure","location":"redukt-test/com.daftmobile.redukt.test/-mutable-dispatch-scope/closure.html","searchKeys":["closure","abstract var closure: DispatchClosure","com.daftmobile.redukt.test.MutableDispatchScope.closure"]},{"name":"abstract var currentState: State","description":"com.daftmobile.redukt.test.MutableDispatchScope.currentState","location":"redukt-test/com.daftmobile.redukt.test/-mutable-dispatch-scope/current-state.html","searchKeys":["currentState","abstract var currentState: State","com.daftmobile.redukt.test.MutableDispatchScope.currentState"]},{"name":"class MiddlewareTester<State>(val middleware: Middleware<State>, val initialState: State, val initialClosure: DispatchClosure = EmptyDispatchClosure, val strict: Boolean = true)","description":"com.daftmobile.redukt.test.middleware.MiddlewareTester","location":"redukt-test/com.daftmobile.redukt.test.middleware/-middleware-tester/index.html","searchKeys":["MiddlewareTester","class MiddlewareTester<State>(val middleware: Middleware<State>, val initialState: State, val initialClosure: DispatchClosure = EmptyDispatchClosure, val strict: Boolean = true)","com.daftmobile.redukt.test.middleware.MiddlewareTester"]},{"name":"fun <State> Middleware<State>.tester(initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, strict: Boolean = true): MiddlewareTester<State>","description":"com.daftmobile.redukt.test.middleware.tester","location":"redukt-test/com.daftmobile.redukt.test.middleware/tester.html","searchKeys":["tester","fun <State> Middleware<State>.tester(initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, strict: Boolean = true): MiddlewareTester<State>","com.daftmobile.redukt.test.middleware.tester"]},{"name":"fun <State> MiddlewareTestScope(middleware: Middleware<State>, initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, initialOnDispatch: MutableDispatchScope<State>.(Action) -> Unit = { }): MiddlewareTestScope<State>","description":"com.daftmobile.redukt.test.middleware.MiddlewareTestScope","location":"redukt-test/com.daftmobile.redukt.test.middleware/-middleware-test-scope.html","searchKeys":["MiddlewareTestScope","fun <State> MiddlewareTestScope(middleware: Middleware<State>, initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, initialOnDispatch: MutableDispatchScope<State>.(Action) -> Unit = { }): MiddlewareTestScope<State>","com.daftmobile.redukt.test.middleware.MiddlewareTestScope"]},{"name":"fun <State> MiddlewareTester(middleware: Middleware<State>, initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, strict: Boolean = true)","description":"com.daftmobile.redukt.test.middleware.MiddlewareTester.MiddlewareTester","location":"redukt-test/com.daftmobile.redukt.test.middleware/-middleware-tester/-middleware-tester.html","searchKeys":["MiddlewareTester","fun <State> MiddlewareTester(middleware: Middleware<State>, initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, strict: Boolean = true)","com.daftmobile.redukt.test.middleware.MiddlewareTester.MiddlewareTester"]},{"name":"fun <State> TestDispatchScope(initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, initialOnDispatch: MutableDispatchScope<State>.(Action) -> Unit = { }): TestDispatchScope<State>","description":"com.daftmobile.redukt.test.tools.TestDispatchScope","location":"redukt-test/com.daftmobile.redukt.test.tools/-test-dispatch-scope.html","searchKeys":["TestDispatchScope","fun <State> TestDispatchScope(initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, initialOnDispatch: MutableDispatchScope<State>.(Action) -> Unit = { }): TestDispatchScope<State>","com.daftmobile.redukt.test.tools.TestDispatchScope"]},{"name":"fun <State> TestStore(initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, initialOnDispatch: MutableDispatchScope<State>.(Action) -> Unit = { }, strict: Boolean = true): TestStore<State>","description":"com.daftmobile.redukt.test.tools.TestStore","location":"redukt-test/com.daftmobile.redukt.test.tools/-test-store.html","searchKeys":["TestStore","fun <State> TestStore(initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, initialOnDispatch: MutableDispatchScope<State>.(Action) -> Unit = { }, strict: Boolean = true): TestStore<State>","com.daftmobile.redukt.test.tools.TestStore"]},{"name":"fun <T> Collection<T>.toQueue(): Queue<T>","description":"com.daftmobile.redukt.test.tools.toQueue","location":"redukt-test/com.daftmobile.redukt.test.tools/to-queue.html","searchKeys":["toQueue","fun <T> Collection<T>.toQueue(): Queue<T>","com.daftmobile.redukt.test.tools.toQueue"]},{"name":"fun <T> emptyQueue(): Queue<T>","description":"com.daftmobile.redukt.test.tools.emptyQueue","location":"redukt-test/com.daftmobile.redukt.test.tools/empty-queue.html","searchKeys":["emptyQueue","fun <T> emptyQueue(): Queue<T>","com.daftmobile.redukt.test.tools.emptyQueue"]},{"name":"fun <T> queueOf(vararg items: T): Queue<T>","description":"com.daftmobile.redukt.test.tools.queueOf","location":"redukt-test/com.daftmobile.redukt.test.tools/queue-of.html","searchKeys":["queueOf","fun <T> queueOf(vararg items: T): Queue<T>","com.daftmobile.redukt.test.tools.queueOf"]},{"name":"fun ActionsAssertScope.assertActionEquals(action: Action)","description":"com.daftmobile.redukt.test.assertions.assertActionEquals","location":"redukt-test/com.daftmobile.redukt.test.assertions/assert-action-equals.html","searchKeys":["assertActionEquals","fun ActionsAssertScope.assertActionEquals(action: Action)","com.daftmobile.redukt.test.assertions.assertActionEquals"]},{"name":"fun ActionsAssertScope.assertActionSequence(vararg actions: Action)","description":"com.daftmobile.redukt.test.assertions.assertActionSequence","location":"redukt-test/com.daftmobile.redukt.test.assertions/assert-action-sequence.html","searchKeys":["assertActionSequence","fun ActionsAssertScope.assertActionSequence(vararg actions: Action)","com.daftmobile.redukt.test.assertions.assertActionSequence"]},{"name":"fun ActionsAssertScope.assertAllActionsCount(count: Int)","description":"com.daftmobile.redukt.test.assertions.assertAllActionsCount","location":"redukt-test/com.daftmobile.redukt.test.assertions/assert-all-actions-count.html","searchKeys":["assertAllActionsCount","fun ActionsAssertScope.assertAllActionsCount(count: Int)","com.daftmobile.redukt.test.assertions.assertAllActionsCount"]},{"name":"fun ActionsAssertScope.assertEveryAction(message: String? = null, predicate: (Action) -> Boolean)","description":"com.daftmobile.redukt.test.assertions.assertEveryAction","location":"redukt-test/com.daftmobile.redukt.test.assertions/assert-every-action.html","searchKeys":["assertEveryAction","fun ActionsAssertScope.assertEveryAction(message: String? = null, predicate: (Action) -> Boolean)","com.daftmobile.redukt.test.assertions.assertEveryAction"]},{"name":"fun ActionsAssertScope.assertNoActions()","description":"com.daftmobile.redukt.test.assertions.assertNoActions","location":"redukt-test/com.daftmobile.redukt.test.assertions/assert-no-actions.html","searchKeys":["assertNoActions","fun ActionsAssertScope.assertNoActions()","com.daftmobile.redukt.test.assertions.assertNoActions"]},{"name":"fun ActionsAssertScope.assertNoMoreActions()","description":"com.daftmobile.redukt.test.assertions.assertNoMoreActions","location":"redukt-test/com.daftmobile.redukt.test.assertions/assert-no-more-actions.html","searchKeys":["assertNoMoreActions","fun ActionsAssertScope.assertNoMoreActions()","com.daftmobile.redukt.test.assertions.assertNoMoreActions"]},{"name":"fun ActionsAssertScope.assertSingleActionEquals(action: Action)","description":"com.daftmobile.redukt.test.assertions.assertSingleActionEquals","location":"redukt-test/com.daftmobile.redukt.test.assertions/assert-single-action-equals.html","searchKeys":["assertSingleActionEquals","fun ActionsAssertScope.assertSingleActionEquals(action: Action)","com.daftmobile.redukt.test.assertions.assertSingleActionEquals"]},{"name":"fun ActionsAssertScope.printActionsStack()","description":"com.daftmobile.redukt.test.assertions.printActionsStack","location":"redukt-test/com.daftmobile.redukt.test.assertions/print-actions-stack.html","searchKeys":["printActionsStack","fun ActionsAssertScope.printActionsStack()","com.daftmobile.redukt.test.assertions.printActionsStack"]},{"name":"fun ActionsAssertScope.skipActions(n: Int)","description":"com.daftmobile.redukt.test.assertions.skipActions","location":"redukt-test/com.daftmobile.redukt.test.assertions/skip-actions.html","searchKeys":["skipActions","fun ActionsAssertScope.skipActions(n: Int)","com.daftmobile.redukt.test.assertions.skipActions"]},{"name":"fun ActionsAssertScope.skipActionsWhile(predicate: (Action) -> Boolean)","description":"com.daftmobile.redukt.test.assertions.skipActionsWhile","location":"redukt-test/com.daftmobile.redukt.test.assertions/skip-actions-while.html","searchKeys":["skipActionsWhile","fun ActionsAssertScope.skipActionsWhile(predicate: (Action) -> Boolean)","com.daftmobile.redukt.test.assertions.skipActionsWhile"]},{"name":"fun ActionsAssertScope.skipOneAction()","description":"com.daftmobile.redukt.test.assertions.skipOneAction","location":"redukt-test/com.daftmobile.redukt.test.assertions/skip-one-action.html","searchKeys":["skipOneAction","fun ActionsAssertScope.skipOneAction()","com.daftmobile.redukt.test.assertions.skipOneAction"]},{"name":"fun ActionsAssertScope.skipOtherActions()","description":"com.daftmobile.redukt.test.assertions.skipOtherActions","location":"redukt-test/com.daftmobile.redukt.test.assertions/skip-other-actions.html","searchKeys":["skipOtherActions","fun ActionsAssertScope.skipOtherActions()","com.daftmobile.redukt.test.assertions.skipOtherActions"]},{"name":"fun MiddlewareTestScope<*>.testAllActions(vararg actions: Action)","description":"com.daftmobile.redukt.test.middleware.testAllActions","location":"redukt-test/com.daftmobile.redukt.test.middleware/test-all-actions.html","searchKeys":["testAllActions","fun MiddlewareTestScope<*>.testAllActions(vararg actions: Action)","com.daftmobile.redukt.test.middleware.testAllActions"]},{"name":"fun MiddlewareTestScope<*>.testJobActionIn(scope: CoroutineScope, action: ForegroundJobAction): Job","description":"com.daftmobile.redukt.test.middleware.testJobActionIn","location":"redukt-test/com.daftmobile.redukt.test.middleware/test-job-action-in.html","searchKeys":["testJobActionIn","fun MiddlewareTestScope<*>.testJobActionIn(scope: CoroutineScope, action: ForegroundJobAction): Job","com.daftmobile.redukt.test.middleware.testJobActionIn"]},{"name":"inline fun <T : Action> ActionsAssertScope.assertActionOfType(assertions: (T) -> Unit = {})","description":"com.daftmobile.redukt.test.assertions.assertActionOfType","location":"redukt-test/com.daftmobile.redukt.test.assertions/assert-action-of-type.html","searchKeys":["assertActionOfType","inline fun <T : Action> ActionsAssertScope.assertActionOfType(assertions: (T) -> Unit = {})","com.daftmobile.redukt.test.assertions.assertActionOfType"]},{"name":"inline fun <T : Action> ActionsAssertScope.assertSingleActionOfType(assertions: (T) -> Unit = {})","description":"com.daftmobile.redukt.test.assertions.assertSingleActionOfType","location":"redukt-test/com.daftmobile.redukt.test.assertions/assert-single-action-of-type.html","searchKeys":["assertSingleActionOfType","inline fun <T : Action> ActionsAssertScope.assertSingleActionOfType(assertions: (T) -> Unit = {})","com.daftmobile.redukt.test.assertions.assertSingleActionOfType"]},{"name":"inline fun <T> Queue<T>.pullEach(block: (T) -> Unit)","description":"com.daftmobile.redukt.test.tools.pullEach","location":"redukt-test/com.daftmobile.redukt.test.tools/pull-each.html","searchKeys":["pullEach","inline fun <T> Queue<T>.pullEach(block: (T) -> Unit)","com.daftmobile.redukt.test.tools.pullEach"]},{"name":"inline fun test(strict: Boolean? = null, state: State = initialState, closure: DispatchClosure = EmptyDispatchClosure, block: MiddlewareTestScope<State>.() -> Unit)","description":"com.daftmobile.redukt.test.middleware.MiddlewareTester.test","location":"redukt-test/com.daftmobile.redukt.test.middleware/-middleware-tester/test.html","searchKeys":["test","inline fun test(strict: Boolean? = null, state: State = initialState, closure: DispatchClosure = EmptyDispatchClosure, block: MiddlewareTestScope<State>.() -> Unit)","com.daftmobile.redukt.test.middleware.MiddlewareTester.test"]},{"name":"interface ActionsAssertScope","description":"com.daftmobile.redukt.test.assertions.ActionsAssertScope","location":"redukt-test/com.daftmobile.redukt.test.assertions/-actions-assert-scope/index.html","searchKeys":["ActionsAssertScope","interface ActionsAssertScope","com.daftmobile.redukt.test.assertions.ActionsAssertScope"]},{"name":"interface MiddlewareTestScope<State> : MutableDispatchScope<State> , ActionsAssertScope","description":"com.daftmobile.redukt.test.middleware.MiddlewareTestScope","location":"redukt-test/com.daftmobile.redukt.test.middleware/-middleware-test-scope/index.html","searchKeys":["MiddlewareTestScope","interface MiddlewareTestScope<State> : MutableDispatchScope<State> , ActionsAssertScope","com.daftmobile.redukt.test.middleware.MiddlewareTestScope"]},{"name":"interface MutableDispatchScope<State>","description":"com.daftmobile.redukt.test.MutableDispatchScope","location":"redukt-test/com.daftmobile.redukt.test/-mutable-dispatch-scope/index.html","searchKeys":["MutableDispatchScope","interface MutableDispatchScope<State>","com.daftmobile.redukt.test.MutableDispatchScope"]},{"name":"interface Queue<T> : Collection<T> ","description":"com.daftmobile.redukt.test.tools.Queue","location":"redukt-test/com.daftmobile.redukt.test.tools/-queue/index.html","searchKeys":["Queue","interface Queue<T> : Collection<T> ","com.daftmobile.redukt.test.tools.Queue"]},{"name":"interface TestDispatchScope<State> : MutableDispatchScope<State> , DispatchScope<State> , ActionsAssertScope","description":"com.daftmobile.redukt.test.tools.TestDispatchScope","location":"redukt-test/com.daftmobile.redukt.test.tools/-test-dispatch-scope/index.html","searchKeys":["TestDispatchScope","interface TestDispatchScope<State> : MutableDispatchScope<State> , DispatchScope<State> , ActionsAssertScope","com.daftmobile.redukt.test.tools.TestDispatchScope"]},{"name":"interface TestStore<State> : MutableDispatchScope<State> , Store<State> ","description":"com.daftmobile.redukt.test.tools.TestStore","location":"redukt-test/com.daftmobile.redukt.test.tools/-test-store/index.html","searchKeys":["TestStore","interface TestStore<State> : MutableDispatchScope<State> , Store<State> ","com.daftmobile.redukt.test.tools.TestStore"]},{"name":"suspend fun MiddlewareTestScope<*>.testJobAction(action: ForegroundJobAction)","description":"com.daftmobile.redukt.test.middleware.testJobAction","location":"redukt-test/com.daftmobile.redukt.test.middleware/test-job-action.html","searchKeys":["testJobAction","suspend fun MiddlewareTestScope<*>.testJobAction(action: ForegroundJobAction)","com.daftmobile.redukt.test.middleware.testJobAction"]},{"name":"val ActionsAssertScope.actionStackString: String","description":"com.daftmobile.redukt.test.assertions.actionStackString","location":"redukt-test/com.daftmobile.redukt.test.assertions/action-stack-string.html","searchKeys":["actionStackString","val ActionsAssertScope.actionStackString: String","com.daftmobile.redukt.test.assertions.actionStackString"]},{"name":"val ActionsAssertScope.currentAction: Action?","description":"com.daftmobile.redukt.test.assertions.currentAction","location":"redukt-test/com.daftmobile.redukt.test.assertions/current-action.html","searchKeys":["currentAction","val ActionsAssertScope.currentAction: Action?","com.daftmobile.redukt.test.assertions.currentAction"]},{"name":"val initialClosure: DispatchClosure","description":"com.daftmobile.redukt.test.middleware.MiddlewareTester.initialClosure","location":"redukt-test/com.daftmobile.redukt.test.middleware/-middleware-tester/initial-closure.html","searchKeys":["initialClosure","val initialClosure: DispatchClosure","com.daftmobile.redukt.test.middleware.MiddlewareTester.initialClosure"]},{"name":"val initialState: State","description":"com.daftmobile.redukt.test.middleware.MiddlewareTester.initialState","location":"redukt-test/com.daftmobile.redukt.test.middleware/-middleware-tester/initial-state.html","searchKeys":["initialState","val initialState: State","com.daftmobile.redukt.test.middleware.MiddlewareTester.initialState"]},{"name":"val middleware: Middleware<State>","description":"com.daftmobile.redukt.test.middleware.MiddlewareTester.middleware","location":"redukt-test/com.daftmobile.redukt.test.middleware/-middleware-tester/middleware.html","searchKeys":["middleware","val middleware: Middleware<State>","com.daftmobile.redukt.test.middleware.MiddlewareTester.middleware"]},{"name":"val strict: Boolean = true","description":"com.daftmobile.redukt.test.middleware.MiddlewareTester.strict","location":"redukt-test/com.daftmobile.redukt.test.middleware/-middleware-tester/strict.html","searchKeys":["strict","val strict: Boolean = true","com.daftmobile.redukt.test.middleware.MiddlewareTester.strict"]},{"name":"fun <AppState, Selected> CompositionLocal<Store<AppState>>.selectAsState(selector: Selector<AppState, Selected>): State<Selected>","description":"com.daftmobile.redukt.compose.selectAsState","location":"redukt-compose/com.daftmobile.redukt.compose/select-as-state.html","searchKeys":["selectAsState","fun <AppState, Selected> CompositionLocal<Store<AppState>>.selectAsState(selector: Selector<AppState, Selected>): State<Selected>","com.daftmobile.redukt.compose.selectAsState"]},{"name":"fun <AppState, Selected> Store<AppState>.selectAsState(selector: Selector<AppState, Selected>): State<Selected>","description":"com.daftmobile.redukt.compose.selectAsState","location":"redukt-compose/com.daftmobile.redukt.compose/select-as-state.html","searchKeys":["selectAsState","fun <AppState, Selected> Store<AppState>.selectAsState(selector: Selector<AppState, Selected>): State<Selected>","com.daftmobile.redukt.compose.selectAsState"]},{"name":"fun <AppState, Selected> Store<AppState>.selectAsState(selectorFunction: SelectorFunction<AppState, Selected>): State<Selected>","description":"com.daftmobile.redukt.compose.selectAsState","location":"redukt-compose/com.daftmobile.redukt.compose/select-as-state.html","searchKeys":["selectAsState","fun <AppState, Selected> Store<AppState>.selectAsState(selectorFunction: SelectorFunction<AppState, Selected>): State<Selected>","com.daftmobile.redukt.compose.selectAsState"]},{"name":"fun <T> localStoreOf(defaultFactory: () -> Store<T> = { null!! }): ProvidableCompositionLocal<Store<T>>","description":"com.daftmobile.redukt.compose.localStoreOf","location":"redukt-compose/com.daftmobile.redukt.compose/local-store-of.html","searchKeys":["localStoreOf","fun <T> localStoreOf(defaultFactory: () -> Store<T> = { null!! }): ProvidableCompositionLocal<Store<T>>","com.daftmobile.redukt.compose.localStoreOf"]},{"name":"val <AppState> CompositionLocal<Store<AppState>>.dispatch: DispatchFunction","description":"com.daftmobile.redukt.compose.dispatch","location":"redukt-compose/com.daftmobile.redukt.compose/dispatch.html","searchKeys":["dispatch","val <AppState> CompositionLocal<Store<AppState>>.dispatch: DispatchFunction","com.daftmobile.redukt.compose.dispatch"]},{"name":"val <AppState> CompositionLocal<Store<AppState>>.dispatchJob: (ForegroundJobAction) -> Job","description":"com.daftmobile.redukt.compose.dispatchJob","location":"redukt-compose/com.daftmobile.redukt.compose/dispatch-job.html","searchKeys":["dispatchJob","val <AppState> CompositionLocal<Store<AppState>>.dispatchJob: (ForegroundJobAction) -> Job","com.daftmobile.redukt.compose.dispatchJob"]},{"name":"val <AppState> CompositionLocal<Store<AppState>>.dispatchJobIn: (ForegroundJobAction, CoroutineScope) -> Unit","description":"com.daftmobile.redukt.compose.dispatchJobIn","location":"redukt-compose/com.daftmobile.redukt.compose/dispatch-job-in.html","searchKeys":["dispatchJobIn","val <AppState> CompositionLocal<Store<AppState>>.dispatchJobIn: (ForegroundJobAction, CoroutineScope) -> Unit","com.daftmobile.redukt.compose.dispatchJobIn"]},{"name":"val <AppState> CompositionLocal<Store<AppState>>.dispatchJobInHere: (ForegroundJobAction) -> Unit","description":"com.daftmobile.redukt.compose.dispatchJobInHere","location":"redukt-compose/com.daftmobile.redukt.compose/dispatch-job-in-here.html","searchKeys":["dispatchJobInHere","val <AppState> CompositionLocal<Store<AppState>>.dispatchJobInHere: (ForegroundJobAction) -> Unit","com.daftmobile.redukt.compose.dispatchJobInHere"]},{"name":"val <AppState> CompositionLocal<Store<AppState>>.joinDispatchJob: suspend (ForegroundJobAction) -> Unit","description":"com.daftmobile.redukt.compose.joinDispatchJob","location":"redukt-compose/com.daftmobile.redukt.compose/join-dispatch-job.html","searchKeys":["joinDispatchJob","val <AppState> CompositionLocal<Store<AppState>>.joinDispatchJob: suspend (ForegroundJobAction) -> Unit","com.daftmobile.redukt.compose.joinDispatchJob"]},{"name":"abstract fun <State, Selected> provide(state: StateFlow<State>, selector: Selector<State, Selected>): StateFlow<Selected>","description":"com.daftmobile.redukt.core.store.select.SelectStateFlowProvider.provide","location":"redukt-core/com.daftmobile.redukt.core.store.select/-select-state-flow-provider/provide.html","searchKeys":["provide","abstract fun <State, Selected> provide(state: StateFlow<State>, selector: Selector<State, Selected>): StateFlow<Selected>","com.daftmobile.redukt.core.store.select.SelectStateFlowProvider.provide"]},{"name":"abstract fun <T : DispatchClosure.Element> find(key: DispatchClosure.Key<T>): T?","description":"com.daftmobile.redukt.core.closure.DispatchClosure.find","location":"redukt-core/com.daftmobile.redukt.core.closure/-dispatch-closure/find.html","searchKeys":["find","abstract fun <T : DispatchClosure.Element> find(key: DispatchClosure.Key<T>): T?","com.daftmobile.redukt.core.closure.DispatchClosure.find"]},{"name":"abstract fun applyTo(closure: DispatchClosure): DispatchClosure","description":"com.daftmobile.redukt.core.closure.LocalClosureContainer.applyTo","location":"redukt-core/com.daftmobile.redukt.core.closure/-local-closure-container/apply-to.html","searchKeys":["applyTo","abstract fun applyTo(closure: DispatchClosure): DispatchClosure","com.daftmobile.redukt.core.closure.LocalClosureContainer.applyTo"]},{"name":"abstract fun closure(block: ClosureBuilderScope.() -> Unit)","description":"com.daftmobile.redukt.core.store.StoreBuilderScope.closure","location":"redukt-core/com.daftmobile.redukt.core.store/-store-builder-scope/closure.html","searchKeys":["closure","abstract fun closure(block: ClosureBuilderScope.() -> Unit)","com.daftmobile.redukt.core.store.StoreBuilderScope.closure"]},{"name":"abstract fun consume(): Job","description":"com.daftmobile.redukt.core.coroutines.ForegroundJobRegistry.consume","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-foreground-job-registry/consume.html","searchKeys":["consume","abstract fun consume(): Job","com.daftmobile.redukt.core.coroutines.ForegroundJobRegistry.consume"]},{"name":"abstract fun consumeOrNull(): Job?","description":"com.daftmobile.redukt.core.coroutines.ForegroundJobRegistry.consumeOrNull","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-foreground-job-registry/consume-or-null.html","searchKeys":["consumeOrNull","abstract fun consumeOrNull(): Job?","com.daftmobile.redukt.core.coroutines.ForegroundJobRegistry.consumeOrNull"]},{"name":"abstract fun dispatch(action: Action)","description":"com.daftmobile.redukt.core.DispatchScope.dispatch","location":"redukt-core/com.daftmobile.redukt.core/-dispatch-scope/dispatch.html","searchKeys":["dispatch","abstract fun dispatch(action: Action)","com.daftmobile.redukt.core.DispatchScope.dispatch"]},{"name":"abstract fun isEqual(old: T, new: T): Boolean","description":"com.daftmobile.redukt.core.store.select.SelectorEquality.isEqual","location":"redukt-core/com.daftmobile.redukt.core.store.select/-selector-equality/is-equal.html","searchKeys":["isEqual","abstract fun isEqual(old: T, new: T): Boolean","com.daftmobile.redukt.core.store.select.SelectorEquality.isEqual"]},{"name":"abstract fun middlewares(block: MiddlewaresBuilderScope<State>.() -> Unit)","description":"com.daftmobile.redukt.core.store.StoreBuilderScope.middlewares","location":"redukt-core/com.daftmobile.redukt.core.store/-store-builder-scope/middlewares.html","searchKeys":["middlewares","abstract fun middlewares(block: MiddlewaresBuilderScope<State>.() -> Unit)","com.daftmobile.redukt.core.store.StoreBuilderScope.middlewares"]},{"name":"abstract fun next(action: Action)","description":"com.daftmobile.redukt.core.middleware.MiddlewareScope.next","location":"redukt-core/com.daftmobile.redukt.core.middleware/-middleware-scope/next.html","searchKeys":["next","abstract fun next(action: Action)","com.daftmobile.redukt.core.middleware.MiddlewareScope.next"]},{"name":"abstract fun register(job: Job)","description":"com.daftmobile.redukt.core.coroutines.ForegroundJobRegistry.register","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-foreground-job-registry/register.html","searchKeys":["register","abstract fun register(job: Job)","com.daftmobile.redukt.core.coroutines.ForegroundJobRegistry.register"]},{"name":"abstract fun registerNewFrame(): LocalClosureContainer.Frame","description":"com.daftmobile.redukt.core.closure.LocalClosureContainer.registerNewFrame","location":"redukt-core/com.daftmobile.redukt.core.closure/-local-closure-container/register-new-frame.html","searchKeys":["registerNewFrame","abstract fun registerNewFrame(): LocalClosureContainer.Frame","com.daftmobile.redukt.core.closure.LocalClosureContainer.registerNewFrame"]},{"name":"abstract fun registerNewSlot(closure: DispatchClosure): LocalClosureContainer.Slot","description":"com.daftmobile.redukt.core.closure.LocalClosureContainer.registerNewSlot","location":"redukt-core/com.daftmobile.redukt.core.closure/-local-closure-container/register-new-slot.html","searchKeys":["registerNewSlot","abstract fun registerNewSlot(closure: DispatchClosure): LocalClosureContainer.Slot","com.daftmobile.redukt.core.closure.LocalClosureContainer.registerNewSlot"]},{"name":"abstract fun removeFrame(frame: LocalClosureContainer.Frame)","description":"com.daftmobile.redukt.core.closure.LocalClosureContainer.removeFrame","location":"redukt-core/com.daftmobile.redukt.core.closure/-local-closure-container/remove-frame.html","searchKeys":["removeFrame","abstract fun removeFrame(frame: LocalClosureContainer.Frame)","com.daftmobile.redukt.core.closure.LocalClosureContainer.removeFrame"]},{"name":"abstract fun removeSlot(slot: LocalClosureContainer.Slot)","description":"com.daftmobile.redukt.core.closure.LocalClosureContainer.removeSlot","location":"redukt-core/com.daftmobile.redukt.core.closure/-local-closure-container/remove-slot.html","searchKeys":["removeSlot","abstract fun removeSlot(slot: LocalClosureContainer.Slot)","com.daftmobile.redukt.core.closure.LocalClosureContainer.removeSlot"]},{"name":"abstract fun scatter(): Map<DispatchClosure.Key<*>, DispatchClosure.Element>","description":"com.daftmobile.redukt.core.closure.DispatchClosure.scatter","location":"redukt-core/com.daftmobile.redukt.core.closure/-dispatch-closure/scatter.html","searchKeys":["scatter","abstract fun scatter(): Map<DispatchClosure.Key<*>, DispatchClosure.Element>","com.daftmobile.redukt.core.closure.DispatchClosure.scatter"]},{"name":"abstract fun select(state: State): Selected","description":"com.daftmobile.redukt.core.store.select.Selector.select","location":"redukt-core/com.daftmobile.redukt.core.store.select/-selector/select.html","searchKeys":["select","abstract fun select(state: State): Selected","com.daftmobile.redukt.core.store.select.Selector.select"]},{"name":"abstract infix fun State.reducedBy(reducer: Reducer<State>)","description":"com.daftmobile.redukt.core.store.StoreBuilderScope.reducedBy","location":"redukt-core/com.daftmobile.redukt.core.store/-store-builder-scope/reduced-by.html","searchKeys":["reducedBy","abstract infix fun State.reducedBy(reducer: Reducer<State>)","com.daftmobile.redukt.core.store.StoreBuilderScope.reducedBy"]},{"name":"abstract operator fun DispatchClosure.unaryPlus()","description":"com.daftmobile.redukt.core.store.ClosureBuilderScope.unaryPlus","location":"redukt-core/com.daftmobile.redukt.core.store/-closure-builder-scope/unary-plus.html","searchKeys":["unaryPlus","abstract operator fun DispatchClosure.unaryPlus()","com.daftmobile.redukt.core.store.ClosureBuilderScope.unaryPlus"]},{"name":"abstract operator fun Middleware<State>.unaryPlus()","description":"com.daftmobile.redukt.core.store.MiddlewaresBuilderScope.unaryPlus","location":"redukt-core/com.daftmobile.redukt.core.store/-middlewares-builder-scope/unary-plus.html","searchKeys":["unaryPlus","abstract operator fun Middleware<State>.unaryPlus()","com.daftmobile.redukt.core.store.MiddlewaresBuilderScope.unaryPlus"]},{"name":"abstract operator fun minus(key: DispatchClosure.Key<*>): DispatchClosure","description":"com.daftmobile.redukt.core.closure.DispatchClosure.minus","location":"redukt-core/com.daftmobile.redukt.core.closure/-dispatch-closure/minus.html","searchKeys":["minus","abstract operator fun minus(key: DispatchClosure.Key<*>): DispatchClosure","com.daftmobile.redukt.core.closure.DispatchClosure.minus"]},{"name":"abstract val closure: DispatchClosure","description":"com.daftmobile.redukt.core.DispatchScope.closure","location":"redukt-core/com.daftmobile.redukt.core/-dispatch-scope/closure.html","searchKeys":["closure","abstract val closure: DispatchClosure","com.daftmobile.redukt.core.DispatchScope.closure"]},{"name":"abstract val currentState: State","description":"com.daftmobile.redukt.core.DispatchScope.currentState","location":"redukt-core/com.daftmobile.redukt.core/-dispatch-scope/current-state.html","searchKeys":["currentState","abstract val currentState: State","com.daftmobile.redukt.core.DispatchScope.currentState"]},{"name":"abstract val key: DispatchClosure.Key<*>","description":"com.daftmobile.redukt.core.closure.DispatchClosure.Element.key","location":"redukt-core/com.daftmobile.redukt.core.closure/-dispatch-closure/-element/key.html","searchKeys":["key","abstract val key: DispatchClosure.Key<*>","com.daftmobile.redukt.core.closure.DispatchClosure.Element.key"]},{"name":"abstract val name: String","description":"com.daftmobile.redukt.core.threading.KtThread.name","location":"redukt-core/com.daftmobile.redukt.core.threading/-kt-thread/name.html","searchKeys":["name","abstract val name: String","com.daftmobile.redukt.core.threading.KtThread.name"]},{"name":"abstract val rawName: String?","description":"com.daftmobile.redukt.core.threading.KtThread.rawName","location":"redukt-core/com.daftmobile.redukt.core.threading/-kt-thread/raw-name.html","searchKeys":["rawName","abstract val rawName: String?","com.daftmobile.redukt.core.threading.KtThread.rawName"]},{"name":"abstract val state: StateFlow<State>","description":"com.daftmobile.redukt.core.store.Store.state","location":"redukt-core/com.daftmobile.redukt.core.store/-store/state.html","searchKeys":["state","abstract val state: StateFlow<State>","com.daftmobile.redukt.core.store.Store.state"]},{"name":"annotation class DelicateReduKtApi","description":"com.daftmobile.redukt.core.DelicateReduKtApi","location":"redukt-core/com.daftmobile.redukt.core/-delicate-redu-kt-api/index.html","searchKeys":["DelicateReduKtApi","annotation class DelicateReduKtApi","com.daftmobile.redukt.core.DelicateReduKtApi"]},{"name":"annotation class StoreBuilderDsl","description":"com.daftmobile.redukt.core.store.StoreBuilderDsl","location":"redukt-core/com.daftmobile.redukt.core.store/-store-builder-dsl/index.html","searchKeys":["StoreBuilderDsl","annotation class StoreBuilderDsl","com.daftmobile.redukt.core.store.StoreBuilderDsl"]},{"name":"class DisabledLocalClosureContainer(closure: DispatchClosure = EmptyDispatchClosure) : LocalClosureContainer","description":"com.daftmobile.redukt.core.coroutines.DisabledLocalClosureContainer","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-disabled-local-closure-container/index.html","searchKeys":["DisabledLocalClosureContainer","class DisabledLocalClosureContainer(closure: DispatchClosure = EmptyDispatchClosure) : LocalClosureContainer","com.daftmobile.redukt.core.coroutines.DisabledLocalClosureContainer"]},{"name":"class DispatchCoroutineScope(coroutineScope: CoroutineScope) : DispatchClosure.Element, CoroutineScope","description":"com.daftmobile.redukt.core.coroutines.DispatchCoroutineScope","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-dispatch-coroutine-scope/index.html","searchKeys":["DispatchCoroutineScope","class DispatchCoroutineScope(coroutineScope: CoroutineScope) : DispatchClosure.Element, CoroutineScope","com.daftmobile.redukt.core.coroutines.DispatchCoroutineScope"]},{"name":"class Frame","description":"com.daftmobile.redukt.core.closure.LocalClosureContainer.Frame","location":"redukt-core/com.daftmobile.redukt.core.closure/-local-closure-container/-frame/index.html","searchKeys":["Frame","class Frame","com.daftmobile.redukt.core.closure.LocalClosureContainer.Frame"]},{"name":"class SingleForegroundJobRegistry(job: Job? = null) : ForegroundJobRegistry","description":"com.daftmobile.redukt.core.coroutines.SingleForegroundJobRegistry","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-single-foreground-job-registry/index.html","searchKeys":["SingleForegroundJobRegistry","class SingleForegroundJobRegistry(job: Job? = null) : ForegroundJobRegistry","com.daftmobile.redukt.core.coroutines.SingleForegroundJobRegistry"]},{"name":"class Slot","description":"com.daftmobile.redukt.core.closure.LocalClosureContainer.Slot","location":"redukt-core/com.daftmobile.redukt.core.closure/-local-closure-container/-slot/index.html","searchKeys":["Slot","class Slot","com.daftmobile.redukt.core.closure.LocalClosureContainer.Slot"]},{"name":"const val UNSPECIFIED: String","description":"com.daftmobile.redukt.core.threading.KtThread.Companion.UNSPECIFIED","location":"redukt-core/com.daftmobile.redukt.core.threading/-kt-thread/-companion/-u-n-s-p-e-c-i-f-i-e-d.html","searchKeys":["UNSPECIFIED","const val UNSPECIFIED: String","com.daftmobile.redukt.core.threading.KtThread.Companion.UNSPECIFIED"]},{"name":"data class WhileSubscribed(val timeout: Duration = DEFAULT_TIMEOUT) : SelectStateCache","description":"com.daftmobile.redukt.core.store.select.SelectStateCache.WhileSubscribed","location":"redukt-core/com.daftmobile.redukt.core.store.select/-select-state-cache/-while-subscribed/index.html","searchKeys":["WhileSubscribed","data class WhileSubscribed(val timeout: Duration = DEFAULT_TIMEOUT) : SelectStateCache","com.daftmobile.redukt.core.store.select.SelectStateCache.WhileSubscribed"]},{"name":"expect fun KtThread.Companion.current(): KtThread","description":"com.daftmobile.redukt.core.threading.current","location":"redukt-core/com.daftmobile.redukt.core.threading/current.html","searchKeys":["current","expect fun KtThread.Companion.current(): KtThread","com.daftmobile.redukt.core.threading.current"]},{"name":"fun <State, Selected> Selector(stateEquality: SelectorEquality<State> = SelectorEquality.Default, selectionEquality: SelectorEquality<Selected> = SelectorEquality.Default, selector: SelectorFunction<State, Selected>): Selector<State, Selected>","description":"com.daftmobile.redukt.core.store.select.Selector","location":"redukt-core/com.daftmobile.redukt.core.store.select/-selector.html","searchKeys":["Selector","fun <State, Selected> Selector(stateEquality: SelectorEquality<State> = SelectorEquality.Default, selectionEquality: SelectorEquality<Selected> = SelectorEquality.Default, selector: SelectorFunction<State, Selected>): Selector<State, Selected>","com.daftmobile.redukt.core.store.select.Selector"]},{"name":"fun <State, Selected> Store<State>.select(selector: Selector<State, Selected>): StateFlow<Selected>","description":"com.daftmobile.redukt.core.store.select.select","location":"redukt-core/com.daftmobile.redukt.core.store.select/select.html","searchKeys":["select","fun <State, Selected> Store<State>.select(selector: Selector<State, Selected>): StateFlow<Selected>","com.daftmobile.redukt.core.store.select.select"]},{"name":"fun <State, Selection> Store<State>.select(selector: SelectorFunction<State, Selection>): StateFlow<Selection>","description":"com.daftmobile.redukt.core.store.select.select","location":"redukt-core/com.daftmobile.redukt.core.store.select/select.html","searchKeys":["select","fun <State, Selection> Store<State>.select(selector: SelectorFunction<State, Selection>): StateFlow<Selection>","com.daftmobile.redukt.core.store.select.select"]},{"name":"fun <State> Store(initialState: State, reducer: Reducer<State>, middlewares: List<Middleware<State>>, initialClosure: DispatchClosure): Store<State>","description":"com.daftmobile.redukt.core.store.Store","location":"redukt-core/com.daftmobile.redukt.core.store/-store.html","searchKeys":["Store","fun <State> Store(initialState: State, reducer: Reducer<State>, middlewares: List<Middleware<State>>, initialClosure: DispatchClosure): Store<State>","com.daftmobile.redukt.core.store.Store"]},{"name":"fun <State> buildStore(block: StoreBuilderScope<State>.() -> Unit): Store<State>","description":"com.daftmobile.redukt.core.store.buildStore","location":"redukt-core/com.daftmobile.redukt.core.store/build-store.html","searchKeys":["buildStore","fun <State> buildStore(block: StoreBuilderScope<State>.() -> Unit): Store<State>","com.daftmobile.redukt.core.store.buildStore"]},{"name":"fun <State> previewStore(initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, reducer: Reducer<State> = { state, _ -> state }): Store<State>","description":"com.daftmobile.redukt.core.store.previewStore","location":"redukt-core/com.daftmobile.redukt.core.store/preview-store.html","searchKeys":["previewStore","fun <State> previewStore(initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, reducer: Reducer<State> = { state, _ -> state }): Store<State>","com.daftmobile.redukt.core.store.previewStore"]},{"name":"fun <T : DispatchClosure.Element> DispatchClosure.findOrElse(key: DispatchClosure.Key<T>, value: T): T","description":"com.daftmobile.redukt.core.closure.findOrElse","location":"redukt-core/com.daftmobile.redukt.core.closure/find-or-else.html","searchKeys":["findOrElse","fun <T : DispatchClosure.Element> DispatchClosure.findOrElse(key: DispatchClosure.Key<T>, value: T): T","com.daftmobile.redukt.core.closure.findOrElse"]},{"name":"fun <T> combineReducers(vararg reducers: Reducer<T>): Reducer<T>","description":"com.daftmobile.redukt.core.combineReducers","location":"redukt-core/com.daftmobile.redukt.core/combine-reducers.html","searchKeys":["combineReducers","fun <T> combineReducers(vararg reducers: Reducer<T>): Reducer<T>","com.daftmobile.redukt.core.combineReducers"]},{"name":"fun DisabledLocalClosureContainer(closure: DispatchClosure = EmptyDispatchClosure)","description":"com.daftmobile.redukt.core.coroutines.DisabledLocalClosureContainer.DisabledLocalClosureContainer","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-disabled-local-closure-container/-disabled-local-closure-container.html","searchKeys":["DisabledLocalClosureContainer","fun DisabledLocalClosureContainer(closure: DispatchClosure = EmptyDispatchClosure)","com.daftmobile.redukt.core.coroutines.DisabledLocalClosureContainer.DisabledLocalClosureContainer"]},{"name":"fun DispatchClosure.launchForeground(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit): Job","description":"com.daftmobile.redukt.core.coroutines.launchForeground","location":"redukt-core/com.daftmobile.redukt.core.coroutines/launch-foreground.html","searchKeys":["launchForeground","fun DispatchClosure.launchForeground(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit): Job","com.daftmobile.redukt.core.coroutines.launchForeground"]},{"name":"fun DispatchCoroutineScope(context: CoroutineContext)","description":"com.daftmobile.redukt.core.coroutines.DispatchCoroutineScope.DispatchCoroutineScope","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-dispatch-coroutine-scope/-dispatch-coroutine-scope.html","searchKeys":["DispatchCoroutineScope","fun DispatchCoroutineScope(context: CoroutineContext)","com.daftmobile.redukt.core.coroutines.DispatchCoroutineScope.DispatchCoroutineScope"]},{"name":"fun DispatchCoroutineScope(coroutineScope: CoroutineScope)","description":"com.daftmobile.redukt.core.coroutines.DispatchCoroutineScope.DispatchCoroutineScope","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-dispatch-coroutine-scope/-dispatch-coroutine-scope.html","searchKeys":["DispatchCoroutineScope","fun DispatchCoroutineScope(coroutineScope: CoroutineScope)","com.daftmobile.redukt.core.coroutines.DispatchCoroutineScope.DispatchCoroutineScope"]},{"name":"fun DispatchScope<*>.dispatchIfPresent(action: Action?)","description":"com.daftmobile.redukt.core.dispatchIfPresent","location":"redukt-core/com.daftmobile.redukt.core/dispatch-if-present.html","searchKeys":["dispatchIfPresent","fun DispatchScope<*>.dispatchIfPresent(action: Action?)","com.daftmobile.redukt.core.dispatchIfPresent"]},{"name":"fun DispatchScope<*>.dispatchJob(action: ForegroundJobAction): Job","description":"com.daftmobile.redukt.core.coroutines.dispatchJob","location":"redukt-core/com.daftmobile.redukt.core.coroutines/dispatch-job.html","searchKeys":["dispatchJob","fun DispatchScope<*>.dispatchJob(action: ForegroundJobAction): Job","com.daftmobile.redukt.core.coroutines.dispatchJob"]},{"name":"fun DispatchScope<*>.dispatchJobIn(action: ForegroundJobAction, scope: CoroutineScope): Job","description":"com.daftmobile.redukt.core.coroutines.dispatchJobIn","location":"redukt-core/com.daftmobile.redukt.core.coroutines/dispatch-job-in.html","searchKeys":["dispatchJobIn","fun DispatchScope<*>.dispatchJobIn(action: ForegroundJobAction, scope: CoroutineScope): Job","com.daftmobile.redukt.core.coroutines.dispatchJobIn"]},{"name":"fun DispatchScope<*>.synchronized(block: suspend DispatchScope<*>.() -> Unit): Job","description":"com.daftmobile.redukt.core.coroutines.synchronized","location":"redukt-core/com.daftmobile.redukt.core.coroutines/synchronized.html","searchKeys":["synchronized","fun DispatchScope<*>.synchronized(block: suspend DispatchScope<*>.() -> Unit): Job","com.daftmobile.redukt.core.coroutines.synchronized"]},{"name":"fun Flow<*>.launchInForegroundOf(scope: MiddlewareScope<*>): Job","description":"com.daftmobile.redukt.core.coroutines.launchInForegroundOf","location":"redukt-core/com.daftmobile.redukt.core.coroutines/launch-in-foreground-of.html","searchKeys":["launchInForegroundOf","fun Flow<*>.launchInForegroundOf(scope: MiddlewareScope<*>): Job","com.daftmobile.redukt.core.coroutines.launchInForegroundOf"]},{"name":"fun Frame()","description":"com.daftmobile.redukt.core.closure.LocalClosureContainer.Frame.Frame","location":"redukt-core/com.daftmobile.redukt.core.closure/-local-closure-container/-frame/-frame.html","searchKeys":["Frame","fun Frame()","com.daftmobile.redukt.core.closure.LocalClosureContainer.Frame.Frame"]},{"name":"fun MiddlewareScope<*>.dispatchFunction(dispatch: DispatchFunction): DispatchFunction","description":"com.daftmobile.redukt.core.middleware.dispatchFunction","location":"redukt-core/com.daftmobile.redukt.core.middleware/dispatch-function.html","searchKeys":["dispatchFunction","fun MiddlewareScope<*>.dispatchFunction(dispatch: DispatchFunction): DispatchFunction","com.daftmobile.redukt.core.middleware.dispatchFunction"]},{"name":"fun MiddlewareScope<*>.launchForeground(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit): Job","description":"com.daftmobile.redukt.core.coroutines.launchForeground","location":"redukt-core/com.daftmobile.redukt.core.coroutines/launch-foreground.html","searchKeys":["launchForeground","fun MiddlewareScope<*>.launchForeground(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit): Job","com.daftmobile.redukt.core.coroutines.launchForeground"]},{"name":"fun SelectStateFlowProvider(cache: SelectStateCache = SelectStateCache.Never): SelectStateFlowProvider","description":"com.daftmobile.redukt.core.store.select.SelectStateFlowProvider","location":"redukt-core/com.daftmobile.redukt.core.store.select/-select-state-flow-provider.html","searchKeys":["SelectStateFlowProvider","fun SelectStateFlowProvider(cache: SelectStateCache = SelectStateCache.Never): SelectStateFlowProvider","com.daftmobile.redukt.core.store.select.SelectStateFlowProvider"]},{"name":"fun SingleForegroundJobRegistry(job: Job? = null)","description":"com.daftmobile.redukt.core.coroutines.SingleForegroundJobRegistry.SingleForegroundJobRegistry","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-single-foreground-job-registry/-single-foreground-job-registry.html","searchKeys":["SingleForegroundJobRegistry","fun SingleForegroundJobRegistry(job: Job? = null)","com.daftmobile.redukt.core.coroutines.SingleForegroundJobRegistry.SingleForegroundJobRegistry"]},{"name":"fun Slot()","description":"com.daftmobile.redukt.core.closure.LocalClosureContainer.Slot.Slot","location":"redukt-core/com.daftmobile.redukt.core.closure/-local-closure-container/-slot/-slot.html","searchKeys":["Slot","fun Slot()","com.daftmobile.redukt.core.closure.LocalClosureContainer.Slot.Slot"]},{"name":"fun WhileSubscribed(timeout: Duration = DEFAULT_TIMEOUT)","description":"com.daftmobile.redukt.core.store.select.SelectStateCache.WhileSubscribed.WhileSubscribed","location":"redukt-core/com.daftmobile.redukt.core.store.select/-select-state-cache/-while-subscribed/-while-subscribed.html","searchKeys":["WhileSubscribed","fun WhileSubscribed(timeout: Duration = DEFAULT_TIMEOUT)","com.daftmobile.redukt.core.store.select.SelectStateCache.WhileSubscribed.WhileSubscribed"]},{"name":"fun interface SelectorEquality<in T>","description":"com.daftmobile.redukt.core.store.select.SelectorEquality","location":"redukt-core/com.daftmobile.redukt.core.store.select/-selector-equality/index.html","searchKeys":["SelectorEquality","fun interface SelectorEquality<in T>","com.daftmobile.redukt.core.store.select.SelectorEquality"]},{"name":"fun runningCoroutinesClosure(): DispatchClosure","description":"com.daftmobile.redukt.core.coroutines.runningCoroutinesClosure","location":"redukt-core/com.daftmobile.redukt.core.coroutines/running-coroutines-closure.html","searchKeys":["runningCoroutinesClosure","fun runningCoroutinesClosure(): DispatchClosure","com.daftmobile.redukt.core.coroutines.runningCoroutinesClosure"]},{"name":"fun skipCoroutinesClosure(): DispatchClosure","description":"com.daftmobile.redukt.core.coroutines.skipCoroutinesClosure","location":"redukt-core/com.daftmobile.redukt.core.coroutines/skip-coroutines-closure.html","searchKeys":["skipCoroutinesClosure","fun skipCoroutinesClosure(): DispatchClosure","com.daftmobile.redukt.core.coroutines.skipCoroutinesClosure"]},{"name":"inline fun <State, T : Action> consumingMiddleware(crossinline block: MiddlewareScope<State>.(T) -> Unit): Middleware<State>","description":"com.daftmobile.redukt.core.middleware.consumingMiddleware","location":"redukt-core/com.daftmobile.redukt.core.middleware/consuming-middleware.html","searchKeys":["consumingMiddleware","inline fun <State, T : Action> consumingMiddleware(crossinline block: MiddlewareScope<State>.(T) -> Unit): Middleware<State>","com.daftmobile.redukt.core.middleware.consumingMiddleware"]},{"name":"inline fun <State> middleware(crossinline block: MiddlewareScope<State>.(action: Action) -> Unit): Middleware<State>","description":"com.daftmobile.redukt.core.middleware.middleware","location":"redukt-core/com.daftmobile.redukt.core.middleware/middleware.html","searchKeys":["middleware","inline fun <State> middleware(crossinline block: MiddlewareScope<State>.(action: Action) -> Unit): Middleware<State>","com.daftmobile.redukt.core.middleware.middleware"]},{"name":"inline fun <State> translucentMiddleware(crossinline block: MiddlewareScope<State>.(Action) -> Unit): Middleware<State>","description":"com.daftmobile.redukt.core.middleware.translucentMiddleware","location":"redukt-core/com.daftmobile.redukt.core.middleware/translucent-middleware.html","searchKeys":["translucentMiddleware","inline fun <State> translucentMiddleware(crossinline block: MiddlewareScope<State>.(Action) -> Unit): Middleware<State>","com.daftmobile.redukt.core.middleware.translucentMiddleware"]},{"name":"inline fun <T : Action> MiddlewareScope<*>.consumingDispatch(crossinline block: (T) -> Unit): DispatchFunction","description":"com.daftmobile.redukt.core.middleware.consumingDispatch","location":"redukt-core/com.daftmobile.redukt.core.middleware/consuming-dispatch.html","searchKeys":["consumingDispatch","inline fun <T : Action> MiddlewareScope<*>.consumingDispatch(crossinline block: (T) -> Unit): DispatchFunction","com.daftmobile.redukt.core.middleware.consumingDispatch"]},{"name":"inline fun <T : Action> MiddlewareScope<*>.translucentDispatchOf(crossinline block: (T) -> Unit): DispatchFunction","description":"com.daftmobile.redukt.core.middleware.translucentDispatchOf","location":"redukt-core/com.daftmobile.redukt.core.middleware/translucent-dispatch-of.html","searchKeys":["translucentDispatchOf","inline fun <T : Action> MiddlewareScope<*>.translucentDispatchOf(crossinline block: (T) -> Unit): DispatchFunction","com.daftmobile.redukt.core.middleware.translucentDispatchOf"]},{"name":"inline fun <T, R> by(crossinline property: (T) -> R): SelectorEquality<T>","description":"com.daftmobile.redukt.core.store.select.SelectorEquality.Companion.by","location":"redukt-core/com.daftmobile.redukt.core.store.select/-selector-equality/-companion/by.html","searchKeys":["by","inline fun <T, R> by(crossinline property: (T) -> R): SelectorEquality<T>","com.daftmobile.redukt.core.store.select.SelectorEquality.Companion.by"]},{"name":"inline fun <T> DispatchClosure.withLocalClosure(closure: DispatchClosure, newFrame: Boolean = false, block: DispatchClosure.() -> T): T","description":"com.daftmobile.redukt.core.closure.withLocalClosure","location":"redukt-core/com.daftmobile.redukt.core.closure/with-local-closure.html","searchKeys":["withLocalClosure","inline fun <T> DispatchClosure.withLocalClosure(closure: DispatchClosure, newFrame: Boolean = false, block: DispatchClosure.() -> T): T","com.daftmobile.redukt.core.closure.withLocalClosure"]},{"name":"inline fun <T> DispatchScope<*>.withLocalClosure(closure: DispatchClosure, newFrame: Boolean = false, block: DispatchScope<*>.() -> T): T","description":"com.daftmobile.redukt.core.closure.withLocalClosure","location":"redukt-core/com.daftmobile.redukt.core.closure/with-local-closure.html","searchKeys":["withLocalClosure","inline fun <T> DispatchScope<*>.withLocalClosure(closure: DispatchClosure, newFrame: Boolean = false, block: DispatchScope<*>.() -> T): T","com.daftmobile.redukt.core.closure.withLocalClosure"]},{"name":"inline fun DispatchClosure.registeringJob(closure: DispatchClosure = EmptyDispatchClosure, newFrame: Boolean = false, block: DispatchClosure.() -> Unit): Job","description":"com.daftmobile.redukt.core.coroutines.registeringJob","location":"redukt-core/com.daftmobile.redukt.core.coroutines/registering-job.html","searchKeys":["registeringJob","inline fun DispatchClosure.registeringJob(closure: DispatchClosure = EmptyDispatchClosure, newFrame: Boolean = false, block: DispatchClosure.() -> Unit): Job","com.daftmobile.redukt.core.coroutines.registeringJob"]},{"name":"inline fun MiddlewareScope<*>.translucentDispatch(crossinline block: DispatchFunction): DispatchFunction","description":"com.daftmobile.redukt.core.middleware.translucentDispatch","location":"redukt-core/com.daftmobile.redukt.core.middleware/translucent-dispatch.html","searchKeys":["translucentDispatch","inline fun MiddlewareScope<*>.translucentDispatch(crossinline block: DispatchFunction): DispatchFunction","com.daftmobile.redukt.core.middleware.translucentDispatch"]},{"name":"interface Action","description":"com.daftmobile.redukt.core.Action","location":"redukt-core/com.daftmobile.redukt.core/-action/index.html","searchKeys":["Action","interface Action","com.daftmobile.redukt.core.Action"]},{"name":"interface ClosureBuilderScope","description":"com.daftmobile.redukt.core.store.ClosureBuilderScope","location":"redukt-core/com.daftmobile.redukt.core.store/-closure-builder-scope/index.html","searchKeys":["ClosureBuilderScope","interface ClosureBuilderScope","com.daftmobile.redukt.core.store.ClosureBuilderScope"]},{"name":"interface DispatchClosure","description":"com.daftmobile.redukt.core.closure.DispatchClosure","location":"redukt-core/com.daftmobile.redukt.core.closure/-dispatch-closure/index.html","searchKeys":["DispatchClosure","interface DispatchClosure","com.daftmobile.redukt.core.closure.DispatchClosure"]},{"name":"interface DispatchScope<out State>","description":"com.daftmobile.redukt.core.DispatchScope","location":"redukt-core/com.daftmobile.redukt.core/-dispatch-scope/index.html","searchKeys":["DispatchScope","interface DispatchScope<out State>","com.daftmobile.redukt.core.DispatchScope"]},{"name":"interface Element : DispatchClosure","description":"com.daftmobile.redukt.core.closure.DispatchClosure.Element","location":"redukt-core/com.daftmobile.redukt.core.closure/-dispatch-closure/-element/index.html","searchKeys":["Element","interface Element : DispatchClosure","com.daftmobile.redukt.core.closure.DispatchClosure.Element"]},{"name":"interface ForegroundJobAction : Action","description":"com.daftmobile.redukt.core.coroutines.ForegroundJobAction","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-foreground-job-action/index.html","searchKeys":["ForegroundJobAction","interface ForegroundJobAction : Action","com.daftmobile.redukt.core.coroutines.ForegroundJobAction"]},{"name":"interface ForegroundJobRegistry : DispatchClosure.Element","description":"com.daftmobile.redukt.core.coroutines.ForegroundJobRegistry","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-foreground-job-registry/index.html","searchKeys":["ForegroundJobRegistry","interface ForegroundJobRegistry : DispatchClosure.Element","com.daftmobile.redukt.core.coroutines.ForegroundJobRegistry"]},{"name":"interface Key<T : DispatchClosure.Element>","description":"com.daftmobile.redukt.core.closure.DispatchClosure.Key","location":"redukt-core/com.daftmobile.redukt.core.closure/-dispatch-closure/-key/index.html","searchKeys":["Key","interface Key<T : DispatchClosure.Element>","com.daftmobile.redukt.core.closure.DispatchClosure.Key"]},{"name":"interface KtThread","description":"com.daftmobile.redukt.core.threading.KtThread","location":"redukt-core/com.daftmobile.redukt.core.threading/-kt-thread/index.html","searchKeys":["KtThread","interface KtThread","com.daftmobile.redukt.core.threading.KtThread"]},{"name":"interface LocalClosureContainer : DispatchClosure.Element","description":"com.daftmobile.redukt.core.closure.LocalClosureContainer","location":"redukt-core/com.daftmobile.redukt.core.closure/-local-closure-container/index.html","searchKeys":["LocalClosureContainer","interface LocalClosureContainer : DispatchClosure.Element","com.daftmobile.redukt.core.closure.LocalClosureContainer"]},{"name":"interface MiddlewareScope<out State> : DispatchScope<State> ","description":"com.daftmobile.redukt.core.middleware.MiddlewareScope","location":"redukt-core/com.daftmobile.redukt.core.middleware/-middleware-scope/index.html","searchKeys":["MiddlewareScope","interface MiddlewareScope<out State> : DispatchScope<State> ","com.daftmobile.redukt.core.middleware.MiddlewareScope"]},{"name":"interface MiddlewaresBuilderScope<State>","description":"com.daftmobile.redukt.core.store.MiddlewaresBuilderScope","location":"redukt-core/com.daftmobile.redukt.core.store/-middlewares-builder-scope/index.html","searchKeys":["MiddlewaresBuilderScope","interface MiddlewaresBuilderScope<State>","com.daftmobile.redukt.core.store.MiddlewaresBuilderScope"]},{"name":"interface SelectStateCache","description":"com.daftmobile.redukt.core.store.select.SelectStateCache","location":"redukt-core/com.daftmobile.redukt.core.store.select/-select-state-cache/index.html","searchKeys":["SelectStateCache","interface SelectStateCache","com.daftmobile.redukt.core.store.select.SelectStateCache"]},{"name":"interface SelectStateFlowProvider : DispatchClosure.Element","description":"com.daftmobile.redukt.core.store.select.SelectStateFlowProvider","location":"redukt-core/com.daftmobile.redukt.core.store.select/-select-state-flow-provider/index.html","searchKeys":["SelectStateFlowProvider","interface SelectStateFlowProvider : DispatchClosure.Element","com.daftmobile.redukt.core.store.select.SelectStateFlowProvider"]},{"name":"interface Selector<State, Selected>","description":"com.daftmobile.redukt.core.store.select.Selector","location":"redukt-core/com.daftmobile.redukt.core.store.select/-selector/index.html","searchKeys":["Selector","interface Selector<State, Selected>","com.daftmobile.redukt.core.store.select.Selector"]},{"name":"interface Store<out State> : DispatchScope<State> ","description":"com.daftmobile.redukt.core.store.Store","location":"redukt-core/com.daftmobile.redukt.core.store/-store/index.html","searchKeys":["Store","interface Store<out State> : DispatchScope<State> ","com.daftmobile.redukt.core.store.Store"]},{"name":"interface StoreBuilderScope<State>","description":"com.daftmobile.redukt.core.store.StoreBuilderScope","location":"redukt-core/com.daftmobile.redukt.core.store/-store-builder-scope/index.html","searchKeys":["StoreBuilderScope","interface StoreBuilderScope<State>","com.daftmobile.redukt.core.store.StoreBuilderScope"]},{"name":"object Companion","description":"com.daftmobile.redukt.core.store.select.SelectStateCache.WhileSubscribed.Companion","location":"redukt-core/com.daftmobile.redukt.core.store.select/-select-state-cache/-while-subscribed/-companion/index.html","searchKeys":["Companion","object Companion","com.daftmobile.redukt.core.store.select.SelectStateCache.WhileSubscribed.Companion"]},{"name":"object Companion","description":"com.daftmobile.redukt.core.store.select.SelectorEquality.Companion","location":"redukt-core/com.daftmobile.redukt.core.store.select/-selector-equality/-companion/index.html","searchKeys":["Companion","object Companion","com.daftmobile.redukt.core.store.select.SelectorEquality.Companion"]},{"name":"object Companion","description":"com.daftmobile.redukt.core.threading.KtThread.Companion","location":"redukt-core/com.daftmobile.redukt.core.threading/-kt-thread/-companion/index.html","searchKeys":["Companion","object Companion","com.daftmobile.redukt.core.threading.KtThread.Companion"]},{"name":"object DisabledForegroundJobRegistry : ForegroundJobRegistry","description":"com.daftmobile.redukt.core.coroutines.DisabledForegroundJobRegistry","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-disabled-foreground-job-registry/index.html","searchKeys":["DisabledForegroundJobRegistry","object DisabledForegroundJobRegistry : ForegroundJobRegistry","com.daftmobile.redukt.core.coroutines.DisabledForegroundJobRegistry"]},{"name":"object EmptyDispatchClosure : DispatchClosure","description":"com.daftmobile.redukt.core.closure.EmptyDispatchClosure","location":"redukt-core/com.daftmobile.redukt.core.closure/-empty-dispatch-closure/index.html","searchKeys":["EmptyDispatchClosure","object EmptyDispatchClosure : DispatchClosure","com.daftmobile.redukt.core.closure.EmptyDispatchClosure"]},{"name":"object EmptyForegroundJobRegistry : ForegroundJobRegistry","description":"com.daftmobile.redukt.core.coroutines.EmptyForegroundJobRegistry","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-empty-foreground-job-registry/index.html","searchKeys":["EmptyForegroundJobRegistry","object EmptyForegroundJobRegistry : ForegroundJobRegistry","com.daftmobile.redukt.core.coroutines.EmptyForegroundJobRegistry"]},{"name":"object Key : DispatchClosure.Key<DispatchCoroutineScope> ","description":"com.daftmobile.redukt.core.coroutines.DispatchCoroutineScope.Key","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-dispatch-coroutine-scope/-key/index.html","searchKeys":["Key","object Key : DispatchClosure.Key<DispatchCoroutineScope> ","com.daftmobile.redukt.core.coroutines.DispatchCoroutineScope.Key"]},{"name":"object Key : DispatchClosure.Key<ForegroundJobRegistry> ","description":"com.daftmobile.redukt.core.coroutines.ForegroundJobRegistry.Key","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-foreground-job-registry/-key/index.html","searchKeys":["Key","object Key : DispatchClosure.Key<ForegroundJobRegistry> ","com.daftmobile.redukt.core.coroutines.ForegroundJobRegistry.Key"]},{"name":"object Key : DispatchClosure.Key<LocalClosureContainer> ","description":"com.daftmobile.redukt.core.closure.LocalClosureContainer.Key","location":"redukt-core/com.daftmobile.redukt.core.closure/-local-closure-container/-key/index.html","searchKeys":["Key","object Key : DispatchClosure.Key<LocalClosureContainer> ","com.daftmobile.redukt.core.closure.LocalClosureContainer.Key"]},{"name":"object Key : DispatchClosure.Key<SelectStateFlowProvider> ","description":"com.daftmobile.redukt.core.store.select.SelectStateFlowProvider.Key","location":"redukt-core/com.daftmobile.redukt.core.store.select/-select-state-flow-provider/-key/index.html","searchKeys":["Key","object Key : DispatchClosure.Key<SelectStateFlowProvider> ","com.daftmobile.redukt.core.store.select.SelectStateFlowProvider.Key"]},{"name":"object Never : SelectStateCache","description":"com.daftmobile.redukt.core.store.select.SelectStateCache.Never","location":"redukt-core/com.daftmobile.redukt.core.store.select/-select-state-cache/-never/index.html","searchKeys":["Never","object Never : SelectStateCache","com.daftmobile.redukt.core.store.select.SelectStateCache.Never"]},{"name":"open fun isSelectionEqual(old: Selected, new: Selected): Boolean","description":"com.daftmobile.redukt.core.store.select.Selector.isSelectionEqual","location":"redukt-core/com.daftmobile.redukt.core.store.select/-selector/is-selection-equal.html","searchKeys":["isSelectionEqual","open fun isSelectionEqual(old: Selected, new: Selected): Boolean","com.daftmobile.redukt.core.store.select.Selector.isSelectionEqual"]},{"name":"open fun isStateEqual(old: State, new: State): Boolean","description":"com.daftmobile.redukt.core.store.select.Selector.isStateEqual","location":"redukt-core/com.daftmobile.redukt.core.store.select/-selector/is-state-equal.html","searchKeys":["isStateEqual","open fun isStateEqual(old: State, new: State): Boolean","com.daftmobile.redukt.core.store.select.Selector.isStateEqual"]},{"name":"open operator fun <T : DispatchClosure.Element> get(key: DispatchClosure.Key<T>): T","description":"com.daftmobile.redukt.core.closure.DispatchClosure.get","location":"redukt-core/com.daftmobile.redukt.core.closure/-dispatch-closure/get.html","searchKeys":["get","open operator fun <T : DispatchClosure.Element> get(key: DispatchClosure.Key<T>): T","com.daftmobile.redukt.core.closure.DispatchClosure.get"]},{"name":"open operator fun plus(closure: DispatchClosure): DispatchClosure","description":"com.daftmobile.redukt.core.closure.DispatchClosure.plus","location":"redukt-core/com.daftmobile.redukt.core.closure/-dispatch-closure/plus.html","searchKeys":["plus","open operator fun plus(closure: DispatchClosure): DispatchClosure","com.daftmobile.redukt.core.closure.DispatchClosure.plus"]},{"name":"open operator override fun <T : DispatchClosure.Element> get(key: DispatchClosure.Key<T>): Nothing","description":"com.daftmobile.redukt.core.closure.EmptyDispatchClosure.get","location":"redukt-core/com.daftmobile.redukt.core.closure/-empty-dispatch-closure/get.html","searchKeys":["get","open operator override fun <T : DispatchClosure.Element> get(key: DispatchClosure.Key<T>): Nothing","com.daftmobile.redukt.core.closure.EmptyDispatchClosure.get"]},{"name":"open operator override fun <T : DispatchClosure.Element> get(key: DispatchClosure.Key<T>): T","description":"com.daftmobile.redukt.core.closure.DispatchClosure.Element.get","location":"redukt-core/com.daftmobile.redukt.core.closure/-dispatch-closure/-element/get.html","searchKeys":["get","open operator override fun <T : DispatchClosure.Element> get(key: DispatchClosure.Key<T>): T","com.daftmobile.redukt.core.closure.DispatchClosure.Element.get"]},{"name":"open operator override fun minus(key: DispatchClosure.Key<*>): DispatchClosure","description":"com.daftmobile.redukt.core.closure.DispatchClosure.Element.minus","location":"redukt-core/com.daftmobile.redukt.core.closure/-dispatch-closure/-element/minus.html","searchKeys":["minus","open operator override fun minus(key: DispatchClosure.Key<*>): DispatchClosure","com.daftmobile.redukt.core.closure.DispatchClosure.Element.minus"]},{"name":"open operator override fun minus(key: DispatchClosure.Key<*>): DispatchClosure","description":"com.daftmobile.redukt.core.closure.EmptyDispatchClosure.minus","location":"redukt-core/com.daftmobile.redukt.core.closure/-empty-dispatch-closure/minus.html","searchKeys":["minus","open operator override fun minus(key: DispatchClosure.Key<*>): DispatchClosure","com.daftmobile.redukt.core.closure.EmptyDispatchClosure.minus"]},{"name":"open operator override fun plus(closure: DispatchClosure): DispatchClosure","description":"com.daftmobile.redukt.core.closure.EmptyDispatchClosure.plus","location":"redukt-core/com.daftmobile.redukt.core.closure/-empty-dispatch-closure/plus.html","searchKeys":["plus","open operator override fun plus(closure: DispatchClosure): DispatchClosure","com.daftmobile.redukt.core.closure.EmptyDispatchClosure.plus"]},{"name":"open override fun <T : DispatchClosure.Element> find(key: DispatchClosure.Key<T>): Nothing?","description":"com.daftmobile.redukt.core.closure.EmptyDispatchClosure.find","location":"redukt-core/com.daftmobile.redukt.core.closure/-empty-dispatch-closure/find.html","searchKeys":["find","open override fun <T : DispatchClosure.Element> find(key: DispatchClosure.Key<T>): Nothing?","com.daftmobile.redukt.core.closure.EmptyDispatchClosure.find"]},{"name":"open override fun <T : DispatchClosure.Element> find(key: DispatchClosure.Key<T>): T?","description":"com.daftmobile.redukt.core.closure.DispatchClosure.Element.find","location":"redukt-core/com.daftmobile.redukt.core.closure/-dispatch-closure/-element/find.html","searchKeys":["find","open override fun <T : DispatchClosure.Element> find(key: DispatchClosure.Key<T>): T?","com.daftmobile.redukt.core.closure.DispatchClosure.Element.find"]},{"name":"open override fun applyTo(closure: DispatchClosure): DispatchClosure","description":"com.daftmobile.redukt.core.coroutines.DisabledLocalClosureContainer.applyTo","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-disabled-local-closure-container/apply-to.html","searchKeys":["applyTo","open override fun applyTo(closure: DispatchClosure): DispatchClosure","com.daftmobile.redukt.core.coroutines.DisabledLocalClosureContainer.applyTo"]},{"name":"open override fun consume(): Job","description":"com.daftmobile.redukt.core.coroutines.DisabledForegroundJobRegistry.consume","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-disabled-foreground-job-registry/consume.html","searchKeys":["consume","open override fun consume(): Job","com.daftmobile.redukt.core.coroutines.DisabledForegroundJobRegistry.consume"]},{"name":"open override fun consume(): Job","description":"com.daftmobile.redukt.core.coroutines.SingleForegroundJobRegistry.consume","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-single-foreground-job-registry/consume.html","searchKeys":["consume","open override fun consume(): Job","com.daftmobile.redukt.core.coroutines.SingleForegroundJobRegistry.consume"]},{"name":"open override fun consume(): Nothing","description":"com.daftmobile.redukt.core.coroutines.EmptyForegroundJobRegistry.consume","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-empty-foreground-job-registry/consume.html","searchKeys":["consume","open override fun consume(): Nothing","com.daftmobile.redukt.core.coroutines.EmptyForegroundJobRegistry.consume"]},{"name":"open override fun consumeOrNull(): Job","description":"com.daftmobile.redukt.core.coroutines.DisabledForegroundJobRegistry.consumeOrNull","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-disabled-foreground-job-registry/consume-or-null.html","searchKeys":["consumeOrNull","open override fun consumeOrNull(): Job","com.daftmobile.redukt.core.coroutines.DisabledForegroundJobRegistry.consumeOrNull"]},{"name":"open override fun consumeOrNull(): Job?","description":"com.daftmobile.redukt.core.coroutines.SingleForegroundJobRegistry.consumeOrNull","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-single-foreground-job-registry/consume-or-null.html","searchKeys":["consumeOrNull","open override fun consumeOrNull(): Job?","com.daftmobile.redukt.core.coroutines.SingleForegroundJobRegistry.consumeOrNull"]},{"name":"open override fun consumeOrNull(): Nothing?","description":"com.daftmobile.redukt.core.coroutines.EmptyForegroundJobRegistry.consumeOrNull","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-empty-foreground-job-registry/consume-or-null.html","searchKeys":["consumeOrNull","open override fun consumeOrNull(): Nothing?","com.daftmobile.redukt.core.coroutines.EmptyForegroundJobRegistry.consumeOrNull"]},{"name":"open override fun register(job: Job)","description":"com.daftmobile.redukt.core.coroutines.DisabledForegroundJobRegistry.register","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-disabled-foreground-job-registry/register.html","searchKeys":["register","open override fun register(job: Job)","com.daftmobile.redukt.core.coroutines.DisabledForegroundJobRegistry.register"]},{"name":"open override fun register(job: Job)","description":"com.daftmobile.redukt.core.coroutines.EmptyForegroundJobRegistry.register","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-empty-foreground-job-registry/register.html","searchKeys":["register","open override fun register(job: Job)","com.daftmobile.redukt.core.coroutines.EmptyForegroundJobRegistry.register"]},{"name":"open override fun register(job: Job)","description":"com.daftmobile.redukt.core.coroutines.SingleForegroundJobRegistry.register","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-single-foreground-job-registry/register.html","searchKeys":["register","open override fun register(job: Job)","com.daftmobile.redukt.core.coroutines.SingleForegroundJobRegistry.register"]},{"name":"open override fun registerNewFrame(): LocalClosureContainer.Frame","description":"com.daftmobile.redukt.core.coroutines.DisabledLocalClosureContainer.registerNewFrame","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-disabled-local-closure-container/register-new-frame.html","searchKeys":["registerNewFrame","open override fun registerNewFrame(): LocalClosureContainer.Frame","com.daftmobile.redukt.core.coroutines.DisabledLocalClosureContainer.registerNewFrame"]},{"name":"open override fun registerNewSlot(closure: DispatchClosure): LocalClosureContainer.Slot","description":"com.daftmobile.redukt.core.coroutines.DisabledLocalClosureContainer.registerNewSlot","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-disabled-local-closure-container/register-new-slot.html","searchKeys":["registerNewSlot","open override fun registerNewSlot(closure: DispatchClosure): LocalClosureContainer.Slot","com.daftmobile.redukt.core.coroutines.DisabledLocalClosureContainer.registerNewSlot"]},{"name":"open override fun removeFrame(frame: LocalClosureContainer.Frame)","description":"com.daftmobile.redukt.core.coroutines.DisabledLocalClosureContainer.removeFrame","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-disabled-local-closure-container/remove-frame.html","searchKeys":["removeFrame","open override fun removeFrame(frame: LocalClosureContainer.Frame)","com.daftmobile.redukt.core.coroutines.DisabledLocalClosureContainer.removeFrame"]},{"name":"open override fun removeSlot(slot: LocalClosureContainer.Slot)","description":"com.daftmobile.redukt.core.coroutines.DisabledLocalClosureContainer.removeSlot","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-disabled-local-closure-container/remove-slot.html","searchKeys":["removeSlot","open override fun removeSlot(slot: LocalClosureContainer.Slot)","com.daftmobile.redukt.core.coroutines.DisabledLocalClosureContainer.removeSlot"]},{"name":"open override fun scatter(): Map<DispatchClosure.Key<*>, DispatchClosure.Element>","description":"com.daftmobile.redukt.core.closure.DispatchClosure.Element.scatter","location":"redukt-core/com.daftmobile.redukt.core.closure/-dispatch-closure/-element/scatter.html","searchKeys":["scatter","open override fun scatter(): Map<DispatchClosure.Key<*>, DispatchClosure.Element>","com.daftmobile.redukt.core.closure.DispatchClosure.Element.scatter"]},{"name":"open override fun scatter(): Map<DispatchClosure.Key<*>, DispatchClosure.Element>","description":"com.daftmobile.redukt.core.closure.EmptyDispatchClosure.scatter","location":"redukt-core/com.daftmobile.redukt.core.closure/-empty-dispatch-closure/scatter.html","searchKeys":["scatter","open override fun scatter(): Map<DispatchClosure.Key<*>, DispatchClosure.Element>","com.daftmobile.redukt.core.closure.EmptyDispatchClosure.scatter"]},{"name":"open override fun toString(): String","description":"com.daftmobile.redukt.core.closure.EmptyDispatchClosure.toString","location":"redukt-core/com.daftmobile.redukt.core.closure/-empty-dispatch-closure/to-string.html","searchKeys":["toString","open override fun toString(): String","com.daftmobile.redukt.core.closure.EmptyDispatchClosure.toString"]},{"name":"open override fun toString(): String","description":"com.daftmobile.redukt.core.coroutines.DispatchCoroutineScope.toString","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-dispatch-coroutine-scope/to-string.html","searchKeys":["toString","open override fun toString(): String","com.daftmobile.redukt.core.coroutines.DispatchCoroutineScope.toString"]},{"name":"open override fun toString(): String","description":"com.daftmobile.redukt.core.coroutines.EmptyForegroundJobRegistry.toString","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-empty-foreground-job-registry/to-string.html","searchKeys":["toString","open override fun toString(): String","com.daftmobile.redukt.core.coroutines.EmptyForegroundJobRegistry.toString"]},{"name":"open override fun toString(): String","description":"com.daftmobile.redukt.core.coroutines.SingleForegroundJobRegistry.toString","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-single-foreground-job-registry/to-string.html","searchKeys":["toString","open override fun toString(): String","com.daftmobile.redukt.core.coroutines.SingleForegroundJobRegistry.toString"]},{"name":"open override val key: DispatchCoroutineScope.Key","description":"com.daftmobile.redukt.core.coroutines.DispatchCoroutineScope.key","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-dispatch-coroutine-scope/key.html","searchKeys":["key","open override val key: DispatchCoroutineScope.Key","com.daftmobile.redukt.core.coroutines.DispatchCoroutineScope.key"]},{"name":"open override val key: ForegroundJobRegistry.Key","description":"com.daftmobile.redukt.core.coroutines.ForegroundJobRegistry.key","location":"redukt-core/com.daftmobile.redukt.core.coroutines/-foreground-job-registry/key.html","searchKeys":["key","open override val key: ForegroundJobRegistry.Key","com.daftmobile.redukt.core.coroutines.ForegroundJobRegistry.key"]},{"name":"open override val key: LocalClosureContainer.Key","description":"com.daftmobile.redukt.core.closure.LocalClosureContainer.key","location":"redukt-core/com.daftmobile.redukt.core.closure/-local-closure-container/key.html","searchKeys":["key","open override val key: LocalClosureContainer.Key","com.daftmobile.redukt.core.closure.LocalClosureContainer.key"]},{"name":"open override val key: SelectStateFlowProvider.Key","description":"com.daftmobile.redukt.core.store.select.SelectStateFlowProvider.key","location":"redukt-core/com.daftmobile.redukt.core.store.select/-select-state-flow-provider/key.html","searchKeys":["key","open override val key: SelectStateFlowProvider.Key","com.daftmobile.redukt.core.store.select.SelectStateFlowProvider.key"]},{"name":"operator fun invoke(): LocalClosureContainer","description":"com.daftmobile.redukt.core.closure.LocalClosureContainer.Key.invoke","location":"redukt-core/com.daftmobile.redukt.core.closure/-local-closure-container/-key/invoke.html","searchKeys":["invoke","operator fun invoke(): LocalClosureContainer","com.daftmobile.redukt.core.closure.LocalClosureContainer.Key.invoke"]},{"name":"suspend fun DispatchScope<*>.joinDispatchJob(action: ForegroundJobAction)","description":"com.daftmobile.redukt.core.coroutines.joinDispatchJob","location":"redukt-core/com.daftmobile.redukt.core.coroutines/join-dispatch-job.html","searchKeys":["joinDispatchJob","suspend fun DispatchScope<*>.joinDispatchJob(action: ForegroundJobAction)","com.daftmobile.redukt.core.coroutines.joinDispatchJob"]},{"name":"val DEFAULT_TIMEOUT: Duration","description":"com.daftmobile.redukt.core.store.select.SelectStateCache.WhileSubscribed.Companion.DEFAULT_TIMEOUT","location":"redukt-core/com.daftmobile.redukt.core.store.select/-select-state-cache/-while-subscribed/-companion/-d-e-f-a-u-l-t_-t-i-m-e-o-u-t.html","searchKeys":["DEFAULT_TIMEOUT","val DEFAULT_TIMEOUT: Duration","com.daftmobile.redukt.core.store.select.SelectStateCache.WhileSubscribed.Companion.DEFAULT_TIMEOUT"]},{"name":"val Default: SelectorEquality<Any?>","description":"com.daftmobile.redukt.core.store.select.SelectorEquality.Companion.Default","location":"redukt-core/com.daftmobile.redukt.core.store.select/-selector-equality/-companion/-default.html","searchKeys":["Default","val Default: SelectorEquality<Any?>","com.daftmobile.redukt.core.store.select.SelectorEquality.Companion.Default"]},{"name":"val DispatchClosure.local: DispatchClosure","description":"com.daftmobile.redukt.core.closure.local","location":"redukt-core/com.daftmobile.redukt.core.closure/local.html","searchKeys":["local","val DispatchClosure.local: DispatchClosure","com.daftmobile.redukt.core.closure.local"]},{"name":"val DispatchScope<*>.coroutineScope: CoroutineScope","description":"com.daftmobile.redukt.core.coroutines.coroutineScope","location":"redukt-core/com.daftmobile.redukt.core.coroutines/coroutine-scope.html","searchKeys":["coroutineScope","val DispatchScope<*>.coroutineScope: CoroutineScope","com.daftmobile.redukt.core.coroutines.coroutineScope"]},{"name":"val KtThread.Companion.JsMainThread: KtThread","description":"com.daftmobile.redukt.core.threading.JsMainThread","location":"redukt-core/com.daftmobile.redukt.core.threading/-js-main-thread.html","searchKeys":["JsMainThread","val KtThread.Companion.JsMainThread: KtThread","com.daftmobile.redukt.core.threading.JsMainThread"]},{"name":"val threadGuardMiddleware: Middleware<*>","description":"com.daftmobile.redukt.core.threading.threadGuardMiddleware","location":"redukt-core/com.daftmobile.redukt.core.threading/thread-guard-middleware.html","searchKeys":["threadGuardMiddleware","val threadGuardMiddleware: Middleware<*>","com.daftmobile.redukt.core.threading.threadGuardMiddleware"]},{"name":"val timeout: Duration","description":"com.daftmobile.redukt.core.store.select.SelectStateCache.WhileSubscribed.timeout","location":"redukt-core/com.daftmobile.redukt.core.store.select/-select-state-cache/-while-subscribed/timeout.html","searchKeys":["timeout","val timeout: Duration","com.daftmobile.redukt.core.store.select.SelectStateCache.WhileSubscribed.timeout"]},{"name":"abstract class BaseCoThunk<State>(block: suspend DispatchScope<State>.() -> Unit) : CoThunk<State> ","description":"com.daftmobile.redukt.thunk.BaseCoThunk","location":"redukt-thunk/com.daftmobile.redukt.thunk/-base-co-thunk/index.html","searchKeys":["BaseCoThunk","abstract class BaseCoThunk<State>(block: suspend DispatchScope<State>.() -> Unit) : CoThunk<State> ","com.daftmobile.redukt.thunk.BaseCoThunk"]},{"name":"abstract class BaseThunk<State>(block: DispatchScope<State>.() -> Unit) : Thunk<State> ","description":"com.daftmobile.redukt.thunk.BaseThunk","location":"redukt-thunk/com.daftmobile.redukt.thunk/-base-thunk/index.html","searchKeys":["BaseThunk","abstract class BaseThunk<State>(block: DispatchScope<State>.() -> Unit) : Thunk<State> ","com.daftmobile.redukt.thunk.BaseThunk"]},{"name":"abstract fun DispatchScope<State>.execute()","description":"com.daftmobile.redukt.thunk.Thunk.execute","location":"redukt-thunk/com.daftmobile.redukt.thunk/-thunk/execute.html","searchKeys":["execute","abstract fun DispatchScope<State>.execute()","com.daftmobile.redukt.thunk.Thunk.execute"]},{"name":"abstract suspend fun DispatchScope<State>.execute()","description":"com.daftmobile.redukt.thunk.CoThunk.execute","location":"redukt-thunk/com.daftmobile.redukt.thunk/-co-thunk/execute.html","searchKeys":["execute","abstract suspend fun DispatchScope<State>.execute()","com.daftmobile.redukt.thunk.CoThunk.execute"]},{"name":"data class DispatchList(val actions: List<Action>) : Thunk<Unit> ","description":"com.daftmobile.redukt.thunk.utils.DispatchList","location":"redukt-thunk/com.daftmobile.redukt.thunk.utils/-dispatch-list/index.html","searchKeys":["DispatchList","data class DispatchList(val actions: List<Action>) : Thunk<Unit> ","com.daftmobile.redukt.thunk.utils.DispatchList"]},{"name":"data class JoiningCoroutines(val concurrent: Boolean = false)","description":"com.daftmobile.redukt.thunk.utils.DispatchListSupport.JoiningCoroutines","location":"redukt-thunk/com.daftmobile.redukt.thunk.utils/-dispatch-list-support/-joining-coroutines/index.html","searchKeys":["JoiningCoroutines","data class JoiningCoroutines(val concurrent: Boolean = false)","com.daftmobile.redukt.thunk.utils.DispatchListSupport.JoiningCoroutines"]},{"name":"data class JoiningCoroutinesDispatchList(val actions: List<Action>, val concurrent: Boolean) : CoThunk<Any?> ","description":"com.daftmobile.redukt.thunk.utils.JoiningCoroutinesDispatchList","location":"redukt-thunk/com.daftmobile.redukt.thunk.utils/-joining-coroutines-dispatch-list/index.html","searchKeys":["JoiningCoroutinesDispatchList","data class JoiningCoroutinesDispatchList(val actions: List<Action>, val concurrent: Boolean) : CoThunk<Any?> ","com.daftmobile.redukt.thunk.utils.JoiningCoroutinesDispatchList"]},{"name":"fun <State> BaseCoThunk(block: suspend DispatchScope<State>.() -> Unit)","description":"com.daftmobile.redukt.thunk.BaseCoThunk.BaseCoThunk","location":"redukt-thunk/com.daftmobile.redukt.thunk/-base-co-thunk/-base-co-thunk.html","searchKeys":["BaseCoThunk","fun <State> BaseCoThunk(block: suspend DispatchScope<State>.() -> Unit)","com.daftmobile.redukt.thunk.BaseCoThunk.BaseCoThunk"]},{"name":"fun <State> BaseThunk(block: DispatchScope<State>.() -> Unit)","description":"com.daftmobile.redukt.thunk.BaseThunk.BaseThunk","location":"redukt-thunk/com.daftmobile.redukt.thunk/-base-thunk/-base-thunk.html","searchKeys":["BaseThunk","fun <State> BaseThunk(block: DispatchScope<State>.() -> Unit)","com.daftmobile.redukt.thunk.BaseThunk.BaseThunk"]},{"name":"fun DispatchList(actions: List<Action>)","description":"com.daftmobile.redukt.thunk.utils.DispatchList.DispatchList","location":"redukt-thunk/com.daftmobile.redukt.thunk.utils/-dispatch-list/-dispatch-list.html","searchKeys":["DispatchList","fun DispatchList(actions: List<Action>)","com.daftmobile.redukt.thunk.utils.DispatchList.DispatchList"]},{"name":"fun JoiningCoroutines(concurrent: Boolean = false)","description":"com.daftmobile.redukt.thunk.utils.DispatchListSupport.JoiningCoroutines.JoiningCoroutines","location":"redukt-thunk/com.daftmobile.redukt.thunk.utils/-dispatch-list-support/-joining-coroutines/-joining-coroutines.html","searchKeys":["JoiningCoroutines","fun JoiningCoroutines(concurrent: Boolean = false)","com.daftmobile.redukt.thunk.utils.DispatchListSupport.JoiningCoroutines.JoiningCoroutines"]},{"name":"fun JoiningCoroutinesDispatchList(actions: List<Action>, concurrent: Boolean)","description":"com.daftmobile.redukt.thunk.utils.JoiningCoroutinesDispatchList.JoiningCoroutinesDispatchList","location":"redukt-thunk/com.daftmobile.redukt.thunk.utils/-joining-coroutines-dispatch-list/-joining-coroutines-dispatch-list.html","searchKeys":["JoiningCoroutinesDispatchList","fun JoiningCoroutinesDispatchList(actions: List<Action>, concurrent: Boolean)","com.daftmobile.redukt.thunk.utils.JoiningCoroutinesDispatchList.JoiningCoroutinesDispatchList"]},{"name":"infix fun DispatchList.support(support: DispatchListSupport.JoiningCoroutines): JoiningCoroutinesDispatchList","description":"com.daftmobile.redukt.thunk.utils.support","location":"redukt-thunk/com.daftmobile.redukt.thunk.utils/support.html","searchKeys":["support","infix fun DispatchList.support(support: DispatchListSupport.JoiningCoroutines): JoiningCoroutinesDispatchList","com.daftmobile.redukt.thunk.utils.support"]},{"name":"inline fun <State> CoThunk(crossinline block: suspend DispatchScope<State>.() -> Unit): CoThunk<State>","description":"com.daftmobile.redukt.thunk.CoThunk","location":"redukt-thunk/com.daftmobile.redukt.thunk/-co-thunk.html","searchKeys":["CoThunk","inline fun <State> CoThunk(crossinline block: suspend DispatchScope<State>.() -> Unit): CoThunk<State>","com.daftmobile.redukt.thunk.CoThunk"]},{"name":"inline fun <State> Thunk(crossinline block: DispatchScope<State>.() -> Unit): Thunk<State>","description":"com.daftmobile.redukt.thunk.Thunk","location":"redukt-thunk/com.daftmobile.redukt.thunk/-thunk.html","searchKeys":["Thunk","inline fun <State> Thunk(crossinline block: DispatchScope<State>.() -> Unit): Thunk<State>","com.daftmobile.redukt.thunk.Thunk"]},{"name":"interface CoThunk<State> : ThunkMarker<State> , ForegroundJobAction","description":"com.daftmobile.redukt.thunk.CoThunk","location":"redukt-thunk/com.daftmobile.redukt.thunk/-co-thunk/index.html","searchKeys":["CoThunk","interface CoThunk<State> : ThunkMarker<State> , ForegroundJobAction","com.daftmobile.redukt.thunk.CoThunk"]},{"name":"interface DispatchListSupport","description":"com.daftmobile.redukt.thunk.utils.DispatchListSupport","location":"redukt-thunk/com.daftmobile.redukt.thunk.utils/-dispatch-list-support/index.html","searchKeys":["DispatchListSupport","interface DispatchListSupport","com.daftmobile.redukt.thunk.utils.DispatchListSupport"]},{"name":"interface Thunk<State> : ThunkMarker<State> ","description":"com.daftmobile.redukt.thunk.Thunk","location":"redukt-thunk/com.daftmobile.redukt.thunk/-thunk/index.html","searchKeys":["Thunk","interface Thunk<State> : ThunkMarker<State> ","com.daftmobile.redukt.thunk.Thunk"]},{"name":"interface ThunkMarker<State> : Action","description":"com.daftmobile.redukt.thunk.ThunkMarker","location":"redukt-thunk/com.daftmobile.redukt.thunk/-thunk-marker/index.html","searchKeys":["ThunkMarker","interface ThunkMarker<State> : Action","com.daftmobile.redukt.thunk.ThunkMarker"]},{"name":"open override fun DispatchScope<Unit>.execute()","description":"com.daftmobile.redukt.thunk.utils.DispatchList.execute","location":"redukt-thunk/com.daftmobile.redukt.thunk.utils/-dispatch-list/execute.html","searchKeys":["execute","open override fun DispatchScope<Unit>.execute()","com.daftmobile.redukt.thunk.utils.DispatchList.execute"]},{"name":"open suspend override fun DispatchScope<Any?>.execute()","description":"com.daftmobile.redukt.thunk.utils.JoiningCoroutinesDispatchList.execute","location":"redukt-thunk/com.daftmobile.redukt.thunk.utils/-joining-coroutines-dispatch-list/execute.html","searchKeys":["execute","open suspend override fun DispatchScope<Any?>.execute()","com.daftmobile.redukt.thunk.utils.JoiningCoroutinesDispatchList.execute"]},{"name":"operator fun Action.plus(other: Action): DispatchList","description":"com.daftmobile.redukt.thunk.utils.plus","location":"redukt-thunk/com.daftmobile.redukt.thunk.utils/plus.html","searchKeys":["plus","operator fun Action.plus(other: Action): DispatchList","com.daftmobile.redukt.thunk.utils.plus"]},{"name":"override fun DispatchScope<State>.execute()","description":"com.daftmobile.redukt.thunk.BaseThunk.execute","location":"redukt-thunk/com.daftmobile.redukt.thunk/-base-thunk/execute.html","searchKeys":["execute","override fun DispatchScope<State>.execute()","com.daftmobile.redukt.thunk.BaseThunk.execute"]},{"name":"suspend override fun DispatchScope<State>.execute()","description":"com.daftmobile.redukt.thunk.BaseCoThunk.execute","location":"redukt-thunk/com.daftmobile.redukt.thunk/-base-co-thunk/execute.html","searchKeys":["execute","suspend override fun DispatchScope<State>.execute()","com.daftmobile.redukt.thunk.BaseCoThunk.execute"]},{"name":"val actions: List<Action>","description":"com.daftmobile.redukt.thunk.utils.DispatchList.actions","location":"redukt-thunk/com.daftmobile.redukt.thunk.utils/-dispatch-list/actions.html","searchKeys":["actions","val actions: List<Action>","com.daftmobile.redukt.thunk.utils.DispatchList.actions"]},{"name":"val actions: List<Action>","description":"com.daftmobile.redukt.thunk.utils.JoiningCoroutinesDispatchList.actions","location":"redukt-thunk/com.daftmobile.redukt.thunk.utils/-joining-coroutines-dispatch-list/actions.html","searchKeys":["actions","val actions: List<Action>","com.daftmobile.redukt.thunk.utils.JoiningCoroutinesDispatchList.actions"]},{"name":"val concurrent: Boolean","description":"com.daftmobile.redukt.thunk.utils.JoiningCoroutinesDispatchList.concurrent","location":"redukt-thunk/com.daftmobile.redukt.thunk.utils/-joining-coroutines-dispatch-list/concurrent.html","searchKeys":["concurrent","val concurrent: Boolean","com.daftmobile.redukt.thunk.utils.JoiningCoroutinesDispatchList.concurrent"]},{"name":"val concurrent: Boolean = false","description":"com.daftmobile.redukt.thunk.utils.DispatchListSupport.JoiningCoroutines.concurrent","location":"redukt-thunk/com.daftmobile.redukt.thunk.utils/-dispatch-list-support/-joining-coroutines/concurrent.html","searchKeys":["concurrent","val concurrent: Boolean = false","com.daftmobile.redukt.thunk.utils.DispatchListSupport.JoiningCoroutines.concurrent"]},{"name":"val thunkMiddleware: Middleware<*>","description":"com.daftmobile.redukt.thunk.thunkMiddleware","location":"redukt-thunk/com.daftmobile.redukt.thunk/thunk-middleware.html","searchKeys":["thunkMiddleware","val thunkMiddleware: Middleware<*>","com.daftmobile.redukt.thunk.thunkMiddleware"]},{"name":"abstract fun <T : DataSource<*, *>> resolve(key: PureDataSourceKey<T>): T?","description":"com.daftmobile.redukt.data.DataSourceResolver.resolve","location":"redukt-data/com.daftmobile.redukt.data/-data-source-resolver/resolve.html","searchKeys":["resolve","abstract fun <T : DataSource<*, *>> resolve(key: PureDataSourceKey<T>): T?","com.daftmobile.redukt.data.DataSourceResolver.resolve"]},{"name":"abstract infix fun <T : DataSource<*, *>> PureDataSourceKey<T>.resolveBy(provider: () -> T)","description":"com.daftmobile.redukt.data.TypeSafeResolverConfigScope.resolveBy","location":"redukt-data/com.daftmobile.redukt.data/-type-safe-resolver-config-scope/resolve-by.html","searchKeys":["resolveBy","abstract infix fun <T : DataSource<*, *>> PureDataSourceKey<T>.resolveBy(provider: () -> T)","com.daftmobile.redukt.data.TypeSafeResolverConfigScope.resolveBy"]},{"name":"abstract infix fun <T : DataSource<*, *>> PureDataSourceKey<T>.resolvesTo(dataSource: T)","description":"com.daftmobile.redukt.data.TypeSafeResolverConfigScope.resolvesTo","location":"redukt-data/com.daftmobile.redukt.data/-type-safe-resolver-config-scope/resolves-to.html","searchKeys":["resolvesTo","abstract infix fun <T : DataSource<*, *>> PureDataSourceKey<T>.resolvesTo(dataSource: T)","com.daftmobile.redukt.data.TypeSafeResolverConfigScope.resolvesTo"]},{"name":"abstract suspend fun call(request: Request): Response","description":"com.daftmobile.redukt.data.DataSource.call","location":"redukt-data/com.daftmobile.redukt.data/-data-source/call.html","searchKeys":["call","abstract suspend fun call(request: Request): Response","com.daftmobile.redukt.data.DataSource.call"]},{"name":"abstract val request: Request","description":"com.daftmobile.redukt.data.DataSourcePayload.request","location":"redukt-data/com.daftmobile.redukt.data/-data-source-payload/request.html","searchKeys":["request","abstract val request: Request","com.daftmobile.redukt.data.DataSourcePayload.request"]},{"name":"annotation class TypeSafeResolverConfigMarker","description":"com.daftmobile.redukt.data.TypeSafeResolverConfigMarker","location":"redukt-data/com.daftmobile.redukt.data/-type-safe-resolver-config-marker/index.html","searchKeys":["TypeSafeResolverConfigMarker","annotation class TypeSafeResolverConfigMarker","com.daftmobile.redukt.data.TypeSafeResolverConfigMarker"]},{"name":"class MissingDataSourceException(key: PureDataSourceKey<*>) : Exception","description":"com.daftmobile.redukt.data.MissingDataSourceException","location":"redukt-data/com.daftmobile.redukt.data/-missing-data-source-exception/index.html","searchKeys":["MissingDataSourceException","class MissingDataSourceException(key: PureDataSourceKey<*>) : Exception","com.daftmobile.redukt.data.MissingDataSourceException"]},{"name":"data class DataSourceAction<Request, Response>(val key: PureDataSourceKey<DataSource<Request, Response>>, val payload: DataSourcePayload<Request, Response>) : Action","description":"com.daftmobile.redukt.data.DataSourceAction","location":"redukt-data/com.daftmobile.redukt.data/-data-source-action/index.html","searchKeys":["DataSourceAction","data class DataSourceAction<Request, Response>(val key: PureDataSourceKey<DataSource<Request, Response>>, val payload: DataSourcePayload<Request, Response>) : Action","com.daftmobile.redukt.data.DataSourceAction"]},{"name":"data class DataSourceCall<Request, Response>(val key: PureDataSourceKey<DataSource<Request, Response>>, val request: Request) : ForegroundJobAction","description":"com.daftmobile.redukt.data.DataSourceCall","location":"redukt-data/com.daftmobile.redukt.data/-data-source-call/index.html","searchKeys":["DataSourceCall","data class DataSourceCall<Request, Response>(val key: PureDataSourceKey<DataSource<Request, Response>>, val request: Request) : ForegroundJobAction","com.daftmobile.redukt.data.DataSourceCall"]},{"name":"data class DataSourceResultPayload<Request, Response>(val request: Request, val result: Result<Response>)","description":"com.daftmobile.redukt.data.DataSourceResultPayload","location":"redukt-data/com.daftmobile.redukt.data/-data-source-result-payload/index.html","searchKeys":["DataSourceResultPayload","data class DataSourceResultPayload<Request, Response>(val request: Request, val result: Result<Response>)","com.daftmobile.redukt.data.DataSourceResultPayload"]},{"name":"data class Failure<Request, Response>(val request: Request, val error: Throwable) : DataSourcePayload<Request, Response> ","description":"com.daftmobile.redukt.data.DataSourcePayload.Failure","location":"redukt-data/com.daftmobile.redukt.data/-data-source-payload/-failure/index.html","searchKeys":["Failure","data class Failure<Request, Response>(val request: Request, val error: Throwable) : DataSourcePayload<Request, Response> ","com.daftmobile.redukt.data.DataSourcePayload.Failure"]},{"name":"data class Started<Request, Response>(val request: Request) : DataSourcePayload<Request, Response> ","description":"com.daftmobile.redukt.data.DataSourcePayload.Started","location":"redukt-data/com.daftmobile.redukt.data/-data-source-payload/-started/index.html","searchKeys":["Started","data class Started<Request, Response>(val request: Request) : DataSourcePayload<Request, Response> ","com.daftmobile.redukt.data.DataSourcePayload.Started"]},{"name":"data class Success<Request, Response>(val request: Request, val response: Response) : DataSourcePayload<Request, Response> ","description":"com.daftmobile.redukt.data.DataSourcePayload.Success","location":"redukt-data/com.daftmobile.redukt.data/-data-source-payload/-success/index.html","searchKeys":["Success","data class Success<Request, Response>(val request: Request, val response: Response) : DataSourcePayload<Request, Response> ","com.daftmobile.redukt.data.DataSourcePayload.Success"]},{"name":"fun <Request, OriginRequest, Response> DataSource<OriginRequest, Response>.adaptRequest(transform: suspend (Request) -> OriginRequest): DataSource<Request, Response>","description":"com.daftmobile.redukt.data.adaptRequest","location":"redukt-data/com.daftmobile.redukt.data/adapt-request.html","searchKeys":["adaptRequest","fun <Request, OriginRequest, Response> DataSource<OriginRequest, Response>.adaptRequest(transform: suspend (Request) -> OriginRequest): DataSource<Request, Response>","com.daftmobile.redukt.data.adaptRequest"]},{"name":"fun <Request, OriginResponse, Response> DataSource<Request, OriginResponse>.adaptResponse(transform: suspend (OriginResponse) -> Response): DataSource<Request, Response>","description":"com.daftmobile.redukt.data.adaptResponse","location":"redukt-data/com.daftmobile.redukt.data/adapt-response.html","searchKeys":["adaptResponse","fun <Request, OriginResponse, Response> DataSource<Request, OriginResponse>.adaptResponse(transform: suspend (OriginResponse) -> Response): DataSource<Request, Response>","com.daftmobile.redukt.data.adaptResponse"]},{"name":"fun <Request, Response> DataSourceAction(key: PureDataSourceKey<DataSource<Request, Response>>, payload: DataSourcePayload<Request, Response>)","description":"com.daftmobile.redukt.data.DataSourceAction.DataSourceAction","location":"redukt-data/com.daftmobile.redukt.data/-data-source-action/-data-source-action.html","searchKeys":["DataSourceAction","fun <Request, Response> DataSourceAction(key: PureDataSourceKey<DataSource<Request, Response>>, payload: DataSourcePayload<Request, Response>)","com.daftmobile.redukt.data.DataSourceAction.DataSourceAction"]},{"name":"fun <Request, Response> DataSourceCall(key: PureDataSourceKey<DataSource<Request, Response>>, request: Request)","description":"com.daftmobile.redukt.data.DataSourceCall.DataSourceCall","location":"redukt-data/com.daftmobile.redukt.data/-data-source-call/-data-source-call.html","searchKeys":["DataSourceCall","fun <Request, Response> DataSourceCall(key: PureDataSourceKey<DataSource<Request, Response>>, request: Request)","com.daftmobile.redukt.data.DataSourceCall.DataSourceCall"]},{"name":"fun <Request, Response> DataSourceResultPayload(request: Request, result: Result<Response>)","description":"com.daftmobile.redukt.data.DataSourceResultPayload.DataSourceResultPayload","location":"redukt-data/com.daftmobile.redukt.data/-data-source-result-payload/-data-source-result-payload.html","searchKeys":["DataSourceResultPayload","fun <Request, Response> DataSourceResultPayload(request: Request, result: Result<Response>)","com.daftmobile.redukt.data.DataSourceResultPayload.DataSourceResultPayload"]},{"name":"fun <Request, Response> PureDataSourceKey<DataSource<Request, Response>>.failureAction(request: Request, error: Throwable): DataSourceAction<Request, Response>","description":"com.daftmobile.redukt.data.failureAction","location":"redukt-data/com.daftmobile.redukt.data/failure-action.html","searchKeys":["failureAction","fun <Request, Response> PureDataSourceKey<DataSource<Request, Response>>.failureAction(request: Request, error: Throwable): DataSourceAction<Request, Response>","com.daftmobile.redukt.data.failureAction"]},{"name":"fun <Request, Response> PureDataSourceKey<DataSource<Request, Response>>.startAction(request: Request): DataSourceAction<Request, Response>","description":"com.daftmobile.redukt.data.startAction","location":"redukt-data/com.daftmobile.redukt.data/start-action.html","searchKeys":["startAction","fun <Request, Response> PureDataSourceKey<DataSource<Request, Response>>.startAction(request: Request): DataSourceAction<Request, Response>","com.daftmobile.redukt.data.startAction"]},{"name":"fun <Request, Response> PureDataSourceKey<DataSource<Request, Response>>.successAction(request: Request, response: Response): DataSourceAction<Request, Response>","description":"com.daftmobile.redukt.data.successAction","location":"redukt-data/com.daftmobile.redukt.data/success-action.html","searchKeys":["successAction","fun <Request, Response> PureDataSourceKey<DataSource<Request, Response>>.successAction(request: Request, response: Response): DataSourceAction<Request, Response>","com.daftmobile.redukt.data.successAction"]},{"name":"fun <Request, Response> Success(request: Request, response: Response)","description":"com.daftmobile.redukt.data.DataSourcePayload.Success.Success","location":"redukt-data/com.daftmobile.redukt.data/-data-source-payload/-success/-success.html","searchKeys":["Success","fun <Request, Response> Success(request: Request, response: Response)","com.daftmobile.redukt.data.DataSourcePayload.Success.Success"]},{"name":"fun <Request> Failure(request: Request, error: Throwable)","description":"com.daftmobile.redukt.data.DataSourcePayload.Failure.Failure","location":"redukt-data/com.daftmobile.redukt.data/-data-source-payload/-failure/-failure.html","searchKeys":["Failure","fun <Request> Failure(request: Request, error: Throwable)","com.daftmobile.redukt.data.DataSourcePayload.Failure.Failure"]},{"name":"fun <Request> Started(request: Request)","description":"com.daftmobile.redukt.data.DataSourcePayload.Started.Started","location":"redukt-data/com.daftmobile.redukt.data/-data-source-payload/-started/-started.html","searchKeys":["Started","fun <Request> Started(request: Request)","com.daftmobile.redukt.data.DataSourcePayload.Started.Started"]},{"name":"fun DataSourceResolver(config: TypeSafeResolverConfigScope.() -> Unit): DataSourceResolver","description":"com.daftmobile.redukt.data.DataSourceResolver","location":"redukt-data/com.daftmobile.redukt.data/-data-source-resolver.html","searchKeys":["DataSourceResolver","fun DataSourceResolver(config: TypeSafeResolverConfigScope.() -> Unit): DataSourceResolver","com.daftmobile.redukt.data.DataSourceResolver"]},{"name":"fun MissingDataSourceException(key: PureDataSourceKey<*>)","description":"com.daftmobile.redukt.data.MissingDataSourceException.MissingDataSourceException","location":"redukt-data/com.daftmobile.redukt.data/-missing-data-source-exception/-missing-data-source-exception.html","searchKeys":["MissingDataSourceException","fun MissingDataSourceException(key: PureDataSourceKey<*>)","com.daftmobile.redukt.data.MissingDataSourceException.MissingDataSourceException"]},{"name":"fun chain(resolvers: List<DataSourceResolver>): DataSourceResolver","description":"com.daftmobile.redukt.data.DataSourceResolver.Key.chain","location":"redukt-data/com.daftmobile.redukt.data/-data-source-resolver/-key/chain.html","searchKeys":["chain","fun chain(resolvers: List<DataSourceResolver>): DataSourceResolver","com.daftmobile.redukt.data.DataSourceResolver.Key.chain"]},{"name":"fun chain(vararg resolvers: DataSourceResolver): DataSourceResolver","description":"com.daftmobile.redukt.data.DataSourceResolver.Key.chain","location":"redukt-data/com.daftmobile.redukt.data/-data-source-resolver/-key/chain.html","searchKeys":["chain","fun chain(vararg resolvers: DataSourceResolver): DataSourceResolver","com.daftmobile.redukt.data.DataSourceResolver.Key.chain"]},{"name":"inline fun <Request, Response, State> createDataSourceReducer(key: PureDataSourceKey<DataSource<Request, Response>>, crossinline onStart: PayloadReducer<State, DataSourcePayload.Started<Request, Response>> = { s, _ -> s }, crossinline onSuccess: PayloadReducer<State, DataSourcePayload.Success<Request, Response>> = { s, _ -> s }, crossinline onFailure: PayloadReducer<State, DataSourcePayload.Failure<Request, Response>> = { s, _ -> s }, crossinline onElse: Reducer<State> = { s, _ -> s }): Reducer<State>","description":"com.daftmobile.redukt.data.createDataSourceReducer","location":"redukt-data/com.daftmobile.redukt.data/create-data-source-reducer.html","searchKeys":["createDataSourceReducer","inline fun <Request, Response, State> createDataSourceReducer(key: PureDataSourceKey<DataSource<Request, Response>>, crossinline onStart: PayloadReducer<State, DataSourcePayload.Started<Request, Response>> = { s, _ -> s }, crossinline onSuccess: PayloadReducer<State, DataSourcePayload.Success<Request, Response>> = { s, _ -> s }, crossinline onFailure: PayloadReducer<State, DataSourcePayload.Failure<Request, Response>> = { s, _ -> s }, crossinline onElse: Reducer<State> = { s, _ -> s }): Reducer<State>","com.daftmobile.redukt.data.createDataSourceReducer"]},{"name":"inline fun <Request, Response, State> createDataSourceReducer(key: PureDataSourceKey<DataSource<Request, Response>>, crossinline onStart: PayloadReducer<State, DataSourcePayload.Started<Request, Response>> = { s, _ -> s }, noinline onResult: PayloadReducer<State, DataSourceResultPayload<Request, Response>> = { s, _ -> s }, crossinline onElse: Reducer<State> = { s, _ -> s }): Reducer<State>","description":"com.daftmobile.redukt.data.createDataSourceReducer","location":"redukt-data/com.daftmobile.redukt.data/create-data-source-reducer.html","searchKeys":["createDataSourceReducer","inline fun <Request, Response, State> createDataSourceReducer(key: PureDataSourceKey<DataSource<Request, Response>>, crossinline onStart: PayloadReducer<State, DataSourcePayload.Started<Request, Response>> = { s, _ -> s }, noinline onResult: PayloadReducer<State, DataSourceResultPayload<Request, Response>> = { s, _ -> s }, crossinline onElse: Reducer<State> = { s, _ -> s }): Reducer<State>","com.daftmobile.redukt.data.createDataSourceReducer"]},{"name":"inline fun <Request, Response, T : DataSourceAction<Request, Response>> Action?.asDataSourceAction(key: PureDataSourceKey<DataSource<Request, Response>>): T?","description":"com.daftmobile.redukt.data.asDataSourceAction","location":"redukt-data/com.daftmobile.redukt.data/as-data-source-action.html","searchKeys":["asDataSourceAction","inline fun <Request, Response, T : DataSourceAction<Request, Response>> Action?.asDataSourceAction(key: PureDataSourceKey<DataSource<Request, Response>>): T?","com.daftmobile.redukt.data.asDataSourceAction"]},{"name":"inline fun <Request, Response, T : DataSourceAction<Request, Response>> DataSourceAction<*, *>?.asOf(key: PureDataSourceKey<DataSource<Request, Response>>): T?","description":"com.daftmobile.redukt.data.asOf","location":"redukt-data/com.daftmobile.redukt.data/as-of.html","searchKeys":["asOf","inline fun <Request, Response, T : DataSourceAction<Request, Response>> DataSourceAction<*, *>?.asOf(key: PureDataSourceKey<DataSource<Request, Response>>): T?","com.daftmobile.redukt.data.asOf"]},{"name":"inline fun <Request, Response> DataSource(crossinline block: suspend (Request) -> Response): DataSource<Request, Response>","description":"com.daftmobile.redukt.data.DataSource","location":"redukt-data/com.daftmobile.redukt.data/-data-source.html","searchKeys":["DataSource","inline fun <Request, Response> DataSource(crossinline block: suspend (Request) -> Response): DataSource<Request, Response>","com.daftmobile.redukt.data.DataSource"]},{"name":"interface DataSource<in Request, out Response>","description":"com.daftmobile.redukt.data.DataSource","location":"redukt-data/com.daftmobile.redukt.data/-data-source/index.html","searchKeys":["DataSource","interface DataSource<in Request, out Response>","com.daftmobile.redukt.data.DataSource"]},{"name":"interface DataSourcePayload<Request, Response>","description":"com.daftmobile.redukt.data.DataSourcePayload","location":"redukt-data/com.daftmobile.redukt.data/-data-source-payload/index.html","searchKeys":["DataSourcePayload","interface DataSourcePayload<Request, Response>","com.daftmobile.redukt.data.DataSourcePayload"]},{"name":"interface DataSourceResolver : DispatchClosure.Element","description":"com.daftmobile.redukt.data.DataSourceResolver","location":"redukt-data/com.daftmobile.redukt.data/-data-source-resolver/index.html","searchKeys":["DataSourceResolver","interface DataSourceResolver : DispatchClosure.Element","com.daftmobile.redukt.data.DataSourceResolver"]},{"name":"interface PureDataSourceKey<out T : DataSource<*, *>>","description":"com.daftmobile.redukt.data.PureDataSourceKey","location":"redukt-data/com.daftmobile.redukt.data/-pure-data-source-key/index.html","searchKeys":["PureDataSourceKey","interface PureDataSourceKey<out T : DataSource<*, *>>","com.daftmobile.redukt.data.PureDataSourceKey"]},{"name":"interface TypeSafeResolverConfigScope","description":"com.daftmobile.redukt.data.TypeSafeResolverConfigScope","location":"redukt-data/com.daftmobile.redukt.data/-type-safe-resolver-config-scope/index.html","searchKeys":["TypeSafeResolverConfigScope","interface TypeSafeResolverConfigScope","com.daftmobile.redukt.data.TypeSafeResolverConfigScope"]},{"name":"object Key : DispatchClosure.Key<DataSourceResolver> ","description":"com.daftmobile.redukt.data.DataSourceResolver.Key","location":"redukt-data/com.daftmobile.redukt.data/-data-source-resolver/-key/index.html","searchKeys":["Key","object Key : DispatchClosure.Key<DataSourceResolver> ","com.daftmobile.redukt.data.DataSourceResolver.Key"]},{"name":"open override val key: DataSourceResolver.Key","description":"com.daftmobile.redukt.data.DataSourceResolver.key","location":"redukt-data/com.daftmobile.redukt.data/-data-source-resolver/key.html","searchKeys":["key","open override val key: DataSourceResolver.Key","com.daftmobile.redukt.data.DataSourceResolver.key"]},{"name":"open override val request: Request","description":"com.daftmobile.redukt.data.DataSourcePayload.Failure.request","location":"redukt-data/com.daftmobile.redukt.data/-data-source-payload/-failure/request.html","searchKeys":["request","open override val request: Request","com.daftmobile.redukt.data.DataSourcePayload.Failure.request"]},{"name":"open override val request: Request","description":"com.daftmobile.redukt.data.DataSourcePayload.Started.request","location":"redukt-data/com.daftmobile.redukt.data/-data-source-payload/-started/request.html","searchKeys":["request","open override val request: Request","com.daftmobile.redukt.data.DataSourcePayload.Started.request"]},{"name":"open override val request: Request","description":"com.daftmobile.redukt.data.DataSourcePayload.Success.request","location":"redukt-data/com.daftmobile.redukt.data/-data-source-payload/-success/request.html","searchKeys":["request","open override val request: Request","com.daftmobile.redukt.data.DataSourcePayload.Success.request"]},{"name":"suspend fun <Request, Response> DataSourceResolver.call(key: PureDataSourceKey<DataSource<Request, Response>>, request: Request): Response","description":"com.daftmobile.redukt.data.call","location":"redukt-data/com.daftmobile.redukt.data/call.html","searchKeys":["call","suspend fun <Request, Response> DataSourceResolver.call(key: PureDataSourceKey<DataSource<Request, Response>>, request: Request): Response","com.daftmobile.redukt.data.call"]},{"name":"suspend fun <Request, Response> DispatchScope<*>.callDataSource(key: PureDataSourceKey<DataSource<Request, Response>>, request: Request): Response","description":"com.daftmobile.redukt.data.callDataSource","location":"redukt-data/com.daftmobile.redukt.data/call-data-source.html","searchKeys":["callDataSource","suspend fun <Request, Response> DispatchScope<*>.callDataSource(key: PureDataSourceKey<DataSource<Request, Response>>, request: Request): Response","com.daftmobile.redukt.data.callDataSource"]},{"name":"val DispatchScope<*>.dataSourceResolver: DataSourceResolver","description":"com.daftmobile.redukt.data.dataSourceResolver","location":"redukt-data/com.daftmobile.redukt.data/data-source-resolver.html","searchKeys":["dataSourceResolver","val DispatchScope<*>.dataSourceResolver: DataSourceResolver","com.daftmobile.redukt.data.dataSourceResolver"]},{"name":"val dataSourceMiddleware: Middleware<*>","description":"com.daftmobile.redukt.data.dataSourceMiddleware","location":"redukt-data/com.daftmobile.redukt.data/data-source-middleware.html","searchKeys":["dataSourceMiddleware","val dataSourceMiddleware: Middleware<*>","com.daftmobile.redukt.data.dataSourceMiddleware"]},{"name":"val error: Throwable","description":"com.daftmobile.redukt.data.DataSourcePayload.Failure.error","location":"redukt-data/com.daftmobile.redukt.data/-data-source-payload/-failure/error.html","searchKeys":["error","val error: Throwable","com.daftmobile.redukt.data.DataSourcePayload.Failure.error"]},{"name":"val key: PureDataSourceKey<DataSource<Request, Response>>","description":"com.daftmobile.redukt.data.DataSourceAction.key","location":"redukt-data/com.daftmobile.redukt.data/-data-source-action/key.html","searchKeys":["key","val key: PureDataSourceKey<DataSource<Request, Response>>","com.daftmobile.redukt.data.DataSourceAction.key"]},{"name":"val key: PureDataSourceKey<DataSource<Request, Response>>","description":"com.daftmobile.redukt.data.DataSourceCall.key","location":"redukt-data/com.daftmobile.redukt.data/-data-source-call/key.html","searchKeys":["key","val key: PureDataSourceKey<DataSource<Request, Response>>","com.daftmobile.redukt.data.DataSourceCall.key"]},{"name":"val payload: DataSourcePayload<Request, Response>","description":"com.daftmobile.redukt.data.DataSourceAction.payload","location":"redukt-data/com.daftmobile.redukt.data/-data-source-action/payload.html","searchKeys":["payload","val payload: DataSourcePayload<Request, Response>","com.daftmobile.redukt.data.DataSourceAction.payload"]},{"name":"val request: Request","description":"com.daftmobile.redukt.data.DataSourceCall.request","location":"redukt-data/com.daftmobile.redukt.data/-data-source-call/request.html","searchKeys":["request","val request: Request","com.daftmobile.redukt.data.DataSourceCall.request"]},{"name":"val request: Request","description":"com.daftmobile.redukt.data.DataSourceResultPayload.request","location":"redukt-data/com.daftmobile.redukt.data/-data-source-result-payload/request.html","searchKeys":["request","val request: Request","com.daftmobile.redukt.data.DataSourceResultPayload.request"]},{"name":"val response: Response","description":"com.daftmobile.redukt.data.DataSourcePayload.Success.response","location":"redukt-data/com.daftmobile.redukt.data/-data-source-payload/-success/response.html","searchKeys":["response","val response: Response","com.daftmobile.redukt.data.DataSourcePayload.Success.response"]},{"name":"val result: Result<Response>","description":"com.daftmobile.redukt.data.DataSourceResultPayload.result","location":"redukt-data/com.daftmobile.redukt.data/-data-source-result-payload/result.html","searchKeys":["result","val result: Result<Response>","com.daftmobile.redukt.data.DataSourceResultPayload.result"]},{"name":"class KoinApplicationDI(val app: KoinApplication) : KoinDI","description":"com.daftmobile.redukt.koin.KoinApplicationDI","location":"redukt-koin/com.daftmobile.redukt.koin/-koin-application-d-i/index.html","searchKeys":["KoinApplicationDI","class KoinApplicationDI(val app: KoinApplication) : KoinDI","com.daftmobile.redukt.koin.KoinApplicationDI"]},{"name":"fun KoinApplicationDI(app: KoinApplication)","description":"com.daftmobile.redukt.koin.KoinApplicationDI.KoinApplicationDI","location":"redukt-koin/com.daftmobile.redukt.koin/-koin-application-d-i/-koin-application-d-i.html","searchKeys":["KoinApplicationDI","fun KoinApplicationDI(app: KoinApplication)","com.daftmobile.redukt.koin.KoinApplicationDI.KoinApplicationDI"]},{"name":"interface KoinDI : KoinComponent, DispatchClosure.Element","description":"com.daftmobile.redukt.koin.KoinDI","location":"redukt-koin/com.daftmobile.redukt.koin/-koin-d-i/index.html","searchKeys":["KoinDI","interface KoinDI : KoinComponent, DispatchClosure.Element","com.daftmobile.redukt.koin.KoinDI"]},{"name":"object GlobalKoinDI : KoinDI","description":"com.daftmobile.redukt.koin.GlobalKoinDI","location":"redukt-koin/com.daftmobile.redukt.koin/-global-koin-d-i/index.html","searchKeys":["GlobalKoinDI","object GlobalKoinDI : KoinDI","com.daftmobile.redukt.koin.GlobalKoinDI"]},{"name":"object Key : DispatchClosure.Key<KoinDI> ","description":"com.daftmobile.redukt.koin.KoinDI.Key","location":"redukt-koin/com.daftmobile.redukt.koin/-koin-d-i/-key/index.html","searchKeys":["Key","object Key : DispatchClosure.Key<KoinDI> ","com.daftmobile.redukt.koin.KoinDI.Key"]},{"name":"open override fun getKoin(): Koin","description":"com.daftmobile.redukt.koin.KoinApplicationDI.getKoin","location":"redukt-koin/com.daftmobile.redukt.koin/-koin-application-d-i/get-koin.html","searchKeys":["getKoin","open override fun getKoin(): Koin","com.daftmobile.redukt.koin.KoinApplicationDI.getKoin"]},{"name":"open override fun toString(): String","description":"com.daftmobile.redukt.koin.GlobalKoinDI.toString","location":"redukt-koin/com.daftmobile.redukt.koin/-global-koin-d-i/to-string.html","searchKeys":["toString","open override fun toString(): String","com.daftmobile.redukt.koin.GlobalKoinDI.toString"]},{"name":"open override fun toString(): String","description":"com.daftmobile.redukt.koin.KoinApplicationDI.toString","location":"redukt-koin/com.daftmobile.redukt.koin/-koin-application-d-i/to-string.html","searchKeys":["toString","open override fun toString(): String","com.daftmobile.redukt.koin.KoinApplicationDI.toString"]},{"name":"open override val key: KoinDI.Key","description":"com.daftmobile.redukt.koin.KoinDI.key","location":"redukt-koin/com.daftmobile.redukt.koin/-koin-d-i/key.html","searchKeys":["key","open override val key: KoinDI.Key","com.daftmobile.redukt.koin.KoinDI.key"]},{"name":"val DispatchScope<*>.koin: Koin","description":"com.daftmobile.redukt.koin.koin","location":"redukt-koin/com.daftmobile.redukt.koin/koin.html","searchKeys":["koin","val DispatchScope<*>.koin: Koin","com.daftmobile.redukt.koin.koin"]},{"name":"val app: KoinApplication","description":"com.daftmobile.redukt.koin.KoinApplicationDI.app","location":"redukt-koin/com.daftmobile.redukt.koin/-koin-application-d-i/app.html","searchKeys":["app","val app: KoinApplication","com.daftmobile.redukt.koin.KoinApplicationDI.app"]},{"name":"abstract class SwiftStore<State : Any>","description":"com.daftmobile.redukt.swift.SwiftStore","location":"redukt-swift/com.daftmobile.redukt.swift/-swift-store/index.html","searchKeys":["SwiftStore","abstract class SwiftStore<State : Any>","com.daftmobile.redukt.swift.SwiftStore"]},{"name":"abstract fun dispose()","description":"com.daftmobile.redukt.swift.Disposable.dispose","location":"redukt-swift/com.daftmobile.redukt.swift/-disposable/dispose.html","searchKeys":["dispose","abstract fun dispose()","com.daftmobile.redukt.swift.Disposable.dispose"]},{"name":"abstract val store: <Error class: unknown class><State>","description":"com.daftmobile.redukt.swift.SwiftStore.store","location":"redukt-swift/com.daftmobile.redukt.swift/-swift-store/store.html","searchKeys":["store","abstract val store: <Error class: unknown class><State>","com.daftmobile.redukt.swift.SwiftStore.store"]},{"name":"class SwiftPreviewStore<State : Any>(initialState: State, reducer: <Error class: unknown class><State>) : SwiftStore<State> ","description":"com.daftmobile.redukt.swift.SwiftPreviewStore","location":"redukt-swift/com.daftmobile.redukt.swift/-swift-preview-store/index.html","searchKeys":["SwiftPreviewStore","class SwiftPreviewStore<State : Any>(initialState: State, reducer: <Error class: unknown class><State>) : SwiftStore<State> ","com.daftmobile.redukt.swift.SwiftPreviewStore"]},{"name":"fun <State : Any> <Error class: unknown class><State>.toSwiftStore(): SwiftStore<State>","description":"com.daftmobile.redukt.swift.toSwiftStore","location":"redukt-swift/com.daftmobile.redukt.swift/to-swift-store.html","searchKeys":["toSwiftStore","fun <State : Any> <Error class: unknown class><State>.toSwiftStore(): SwiftStore<State>","com.daftmobile.redukt.swift.toSwiftStore"]},{"name":"fun <State : Any> SwiftPreviewStore(initialState: State)","description":"com.daftmobile.redukt.swift.SwiftPreviewStore.SwiftPreviewStore","location":"redukt-swift/com.daftmobile.redukt.swift/-swift-preview-store/-swift-preview-store.html","searchKeys":["SwiftPreviewStore","fun <State : Any> SwiftPreviewStore(initialState: State)","com.daftmobile.redukt.swift.SwiftPreviewStore.SwiftPreviewStore"]},{"name":"fun <State : Any> SwiftPreviewStore(initialState: State, reducer: <Error class: unknown class><State>)","description":"com.daftmobile.redukt.swift.SwiftPreviewStore.SwiftPreviewStore","location":"redukt-swift/com.daftmobile.redukt.swift/-swift-preview-store/-swift-preview-store.html","searchKeys":["SwiftPreviewStore","fun <State : Any> SwiftPreviewStore(initialState: State, reducer: <Error class: unknown class><State>)","com.daftmobile.redukt.swift.SwiftPreviewStore.SwiftPreviewStore"]},{"name":"fun <State : Any> createPreview(initialState: State, reducer: <Error class: unknown class><State>): SwiftPreviewStore<State>","description":"com.daftmobile.redukt.swift.SwiftStore.Companion.createPreview","location":"redukt-swift/com.daftmobile.redukt.swift/-swift-store/-companion/create-preview.html","searchKeys":["createPreview","fun <State : Any> createPreview(initialState: State, reducer: <Error class: unknown class><State>): SwiftPreviewStore<State>","com.daftmobile.redukt.swift.SwiftStore.Companion.createPreview"]},{"name":"fun SwiftStore()","description":"com.daftmobile.redukt.swift.SwiftStore.SwiftStore","location":"redukt-swift/com.daftmobile.redukt.swift/-swift-store/-swift-store.html","searchKeys":["SwiftStore","fun SwiftStore()","com.daftmobile.redukt.swift.SwiftStore.SwiftStore"]},{"name":"fun interface Disposable","description":"com.daftmobile.redukt.swift.Disposable","location":"redukt-swift/com.daftmobile.redukt.swift/-disposable/index.html","searchKeys":["Disposable","fun interface Disposable","com.daftmobile.redukt.swift.Disposable"]},{"name":"object Companion","description":"com.daftmobile.redukt.swift.SwiftStore.Companion","location":"redukt-swift/com.daftmobile.redukt.swift/-swift-store/-companion/index.html","searchKeys":["Companion","object Companion","com.daftmobile.redukt.swift.SwiftStore.Companion"]},{"name":"open fun <Selected> subscribe(selector: <Error class: unknown class><State, Selected>, onStateChange: (Selected) -> Unit): Disposable","description":"com.daftmobile.redukt.swift.SwiftStore.subscribe","location":"redukt-swift/com.daftmobile.redukt.swift/-swift-store/subscribe.html","searchKeys":["subscribe","open fun <Selected> subscribe(selector: <Error class: unknown class><State, Selected>, onStateChange: (Selected) -> Unit): Disposable","com.daftmobile.redukt.swift.SwiftStore.subscribe"]},{"name":"open fun dispatch(action: <Error class: unknown class>)","description":"com.daftmobile.redukt.swift.SwiftStore.dispatch","location":"redukt-swift/com.daftmobile.redukt.swift/-swift-store/dispatch.html","searchKeys":["dispatch","open fun dispatch(action: <Error class: unknown class>)","com.daftmobile.redukt.swift.SwiftStore.dispatch"]},{"name":"open fun dispatchJob(action: <Error class: unknown class>): Disposable","description":"com.daftmobile.redukt.swift.SwiftStore.dispatchJob","location":"redukt-swift/com.daftmobile.redukt.swift/-swift-store/dispatch-job.html","searchKeys":["dispatchJob","open fun dispatchJob(action: <Error class: unknown class>): Disposable","com.daftmobile.redukt.swift.SwiftStore.dispatchJob"]},{"name":"open fun subscribe(onStateChange: (State) -> Unit): Disposable","description":"com.daftmobile.redukt.swift.SwiftStore.subscribe","location":"redukt-swift/com.daftmobile.redukt.swift/-swift-store/subscribe.html","searchKeys":["subscribe","open fun subscribe(onStateChange: (State) -> Unit): Disposable","com.daftmobile.redukt.swift.SwiftStore.subscribe"]},{"name":"open override val store: <Error class: unknown class><State>","description":"com.daftmobile.redukt.swift.SwiftPreviewStore.store","location":"redukt-swift/com.daftmobile.redukt.swift/-swift-preview-store/store.html","searchKeys":["store","open override val store: <Error class: unknown class><State>","com.daftmobile.redukt.swift.SwiftPreviewStore.store"]},{"name":"open val currentState: State","description":"com.daftmobile.redukt.swift.SwiftStore.currentState","location":"redukt-swift/com.daftmobile.redukt.swift/-swift-store/current-state.html","searchKeys":["currentState","open val currentState: State","com.daftmobile.redukt.swift.SwiftStore.currentState"]},{"name":"abstract fun client(client: HttpClient)","description":"com.daftmobile.redukt.data.ktor.HttpDataSourceResolverConfigScope.client","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-data-source-resolver-config-scope/client.html","searchKeys":["client","abstract fun client(client: HttpClient)","com.daftmobile.redukt.data.ktor.HttpDataSourceResolverConfigScope.client"]},{"name":"abstract fun client(config: HttpClientConfig<*>.() -> Unit)","description":"com.daftmobile.redukt.data.ktor.HttpDataSourceResolverConfigScope.client","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-data-source-resolver-config-scope/client.html","searchKeys":["client","abstract fun client(config: HttpClientConfig<*>.() -> Unit)","com.daftmobile.redukt.data.ktor.HttpDataSourceResolverConfigScope.client"]},{"name":"abstract fun client(engine: HttpClientEngine, config: HttpClientConfig<*>.() -> Unit)","description":"com.daftmobile.redukt.data.ktor.HttpDataSourceResolverConfigScope.client","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-data-source-resolver-config-scope/client.html","searchKeys":["client","abstract fun client(engine: HttpClientEngine, config: HttpClientConfig<*>.() -> Unit)","com.daftmobile.redukt.data.ktor.HttpDataSourceResolverConfigScope.client"]},{"name":"abstract infix fun <Request, Response, T : DataSource<Request, Response>> PureDataSourceKey<T>.resolvedBy(provider: () -> HttpEndpoint<Request, *, Response>)","description":"com.daftmobile.redukt.data.ktor.HttpDataSourceResolverConfigScope.resolvedBy","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-data-source-resolver-config-scope/resolved-by.html","searchKeys":["resolvedBy","abstract infix fun <Request, Response, T : DataSource<Request, Response>> PureDataSourceKey<T>.resolvedBy(provider: () -> HttpEndpoint<Request, *, Response>)","com.daftmobile.redukt.data.ktor.HttpDataSourceResolverConfigScope.resolvedBy"]},{"name":"abstract infix fun <Request, Response, T : DataSource<Request, Response>> PureDataSourceKey<T>.resolvesTo(endpoint: HttpEndpoint<Request, *, Response>)","description":"com.daftmobile.redukt.data.ktor.HttpDataSourceResolverConfigScope.resolvesTo","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-data-source-resolver-config-scope/resolves-to.html","searchKeys":["resolvesTo","abstract infix fun <Request, Response, T : DataSource<Request, Response>> PureDataSourceKey<T>.resolvesTo(endpoint: HttpEndpoint<Request, *, Response>)","com.daftmobile.redukt.data.ktor.HttpDataSourceResolverConfigScope.resolvesTo"]},{"name":"abstract val errorMapper: HttpErrorMapper?","description":"com.daftmobile.redukt.data.ktor.HttpEndpoint.errorMapper","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-endpoint/error-mapper.html","searchKeys":["errorMapper","abstract val errorMapper: HttpErrorMapper?","com.daftmobile.redukt.data.ktor.HttpEndpoint.errorMapper"]},{"name":"abstract val requestCreator: HttpRequestCreator<Request>","description":"com.daftmobile.redukt.data.ktor.HttpEndpoint.requestCreator","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-endpoint/request-creator.html","searchKeys":["requestCreator","abstract val requestCreator: HttpRequestCreator<Request>","com.daftmobile.redukt.data.ktor.HttpEndpoint.requestCreator"]},{"name":"abstract val responseMapper: HttpResponseMapper<Request, Dto, Response>","description":"com.daftmobile.redukt.data.ktor.HttpEndpoint.responseMapper","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-endpoint/response-mapper.html","searchKeys":["responseMapper","abstract val responseMapper: HttpResponseMapper<Request, Dto, Response>","com.daftmobile.redukt.data.ktor.HttpEndpoint.responseMapper"]},{"name":"abstract val responseReader: HttpResponseReader<Dto>","description":"com.daftmobile.redukt.data.ktor.HttpEndpoint.responseReader","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-endpoint/response-reader.html","searchKeys":["responseReader","abstract val responseReader: HttpResponseReader<Dto>","com.daftmobile.redukt.data.ktor.HttpEndpoint.responseReader"]},{"name":"abstract var defaultErrorMapper: HttpErrorMapper?","description":"com.daftmobile.redukt.data.ktor.HttpDataSourceResolverConfigScope.defaultErrorMapper","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-data-source-resolver-config-scope/default-error-mapper.html","searchKeys":["defaultErrorMapper","abstract var defaultErrorMapper: HttpErrorMapper?","com.daftmobile.redukt.data.ktor.HttpDataSourceResolverConfigScope.defaultErrorMapper"]},{"name":"abstract var dispatcher: CoroutineDispatcher","description":"com.daftmobile.redukt.data.ktor.HttpDataSourceResolverConfigScope.dispatcher","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-data-source-resolver-config-scope/dispatcher.html","searchKeys":["dispatcher","abstract var dispatcher: CoroutineDispatcher","com.daftmobile.redukt.data.ktor.HttpDataSourceResolverConfigScope.dispatcher"]},{"name":"fun <Request, Dto, Response> HttpEndpoint(requestCreator: HttpRequestCreator<Request>, responseReader: HttpResponseReader<Dto>, responseMapper: HttpResponseMapper<Request, Dto, Response>, errorMapper: HttpErrorMapper? = null): HttpEndpoint<Request, Dto, Response>","description":"com.daftmobile.redukt.data.ktor.HttpEndpoint","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-endpoint.html","searchKeys":["HttpEndpoint","fun <Request, Dto, Response> HttpEndpoint(requestCreator: HttpRequestCreator<Request>, responseReader: HttpResponseReader<Dto>, responseMapper: HttpResponseMapper<Request, Dto, Response>, errorMapper: HttpErrorMapper? = null): HttpEndpoint<Request, Dto, Response>","com.daftmobile.redukt.data.ktor.HttpEndpoint"]},{"name":"fun HttpDataSourceResolver(config: HttpDataSourceResolverConfigScope.() -> Unit): DataSourceResolver","description":"com.daftmobile.redukt.data.ktor.HttpDataSourceResolver","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-data-source-resolver.html","searchKeys":["HttpDataSourceResolver","fun HttpDataSourceResolver(config: HttpDataSourceResolverConfigScope.() -> Unit): DataSourceResolver","com.daftmobile.redukt.data.ktor.HttpDataSourceResolver"]},{"name":"inline fun <Request, Dto, Response> HttpEndpoint(noinline requestCreator: HttpRequestCreator<Request>, noinline responseMapper: HttpResponseMapper<Request, Dto, Response>, noinline errorMapper: HttpErrorMapper? = null): HttpEndpoint<Request, Dto, Response>","description":"com.daftmobile.redukt.data.ktor.HttpEndpoint","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-endpoint.html","searchKeys":["HttpEndpoint","inline fun <Request, Dto, Response> HttpEndpoint(noinline requestCreator: HttpRequestCreator<Request>, noinline responseMapper: HttpResponseMapper<Request, Dto, Response>, noinline errorMapper: HttpErrorMapper? = null): HttpEndpoint<Request, Dto, Response>","com.daftmobile.redukt.data.ktor.HttpEndpoint"]},{"name":"inline fun <Request, Response> HttpEndpoint(noinline requestCreator: HttpRequestCreator<Request>, noinline errorMapper: HttpErrorMapper? = null): HttpEndpoint<Request, Response, Response>","description":"com.daftmobile.redukt.data.ktor.HttpEndpoint","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-endpoint.html","searchKeys":["HttpEndpoint","inline fun <Request, Response> HttpEndpoint(noinline requestCreator: HttpRequestCreator<Request>, noinline errorMapper: HttpErrorMapper? = null): HttpEndpoint<Request, Response, Response>","com.daftmobile.redukt.data.ktor.HttpEndpoint"]},{"name":"interface HttpDataSourceResolverConfigScope","description":"com.daftmobile.redukt.data.ktor.HttpDataSourceResolverConfigScope","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-data-source-resolver-config-scope/index.html","searchKeys":["HttpDataSourceResolverConfigScope","interface HttpDataSourceResolverConfigScope","com.daftmobile.redukt.data.ktor.HttpDataSourceResolverConfigScope"]},{"name":"interface HttpEndpoint<in Request, Dto, out Response>","description":"com.daftmobile.redukt.data.ktor.HttpEndpoint","location":"redukt-data-ktor/com.daftmobile.redukt.data.ktor/-http-endpoint/index.html","searchKeys":["HttpEndpoint","interface HttpEndpoint<in Request, Dto, out Response>","com.daftmobile.redukt.data.ktor.HttpEndpoint"]},{"name":"abstract fun testExecute()","description":"com.daftmobile.redukt.test.thunk.ThunkTestScope.testExecute","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-thunk-test-scope/test-execute.html","searchKeys":["testExecute","abstract fun testExecute()","com.daftmobile.redukt.test.thunk.ThunkTestScope.testExecute"]},{"name":"abstract suspend fun testExecute()","description":"com.daftmobile.redukt.test.thunk.CoThunkTestScope.testExecute","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-co-thunk-test-scope/test-execute.html","searchKeys":["testExecute","abstract suspend fun testExecute()","com.daftmobile.redukt.test.thunk.CoThunkTestScope.testExecute"]},{"name":"class CoThunkTester<State>(val thunk: CoThunk<State>, val initialState: State, val initialClosure: DispatchClosure = EmptyDispatchClosure, val strict: Boolean = true)","description":"com.daftmobile.redukt.test.thunk.CoThunkTester","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-co-thunk-tester/index.html","searchKeys":["CoThunkTester","class CoThunkTester<State>(val thunk: CoThunk<State>, val initialState: State, val initialClosure: DispatchClosure = EmptyDispatchClosure, val strict: Boolean = true)","com.daftmobile.redukt.test.thunk.CoThunkTester"]},{"name":"class ThunkTester<State>(val thunk: Thunk<State>, val initialState: State, val initialClosure: DispatchClosure = EmptyDispatchClosure, val strict: Boolean = true)","description":"com.daftmobile.redukt.test.thunk.ThunkTester","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-thunk-tester/index.html","searchKeys":["ThunkTester","class ThunkTester<State>(val thunk: Thunk<State>, val initialState: State, val initialClosure: DispatchClosure = EmptyDispatchClosure, val strict: Boolean = true)","com.daftmobile.redukt.test.thunk.ThunkTester"]},{"name":"fun <State> CoThunk<State>.tester(initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, strict: Boolean = true): CoThunkTester<State>","description":"com.daftmobile.redukt.test.thunk.tester","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/tester.html","searchKeys":["tester","fun <State> CoThunk<State>.tester(initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, strict: Boolean = true): CoThunkTester<State>","com.daftmobile.redukt.test.thunk.tester"]},{"name":"fun <State> CoThunkTestScope(thunk: CoThunk<State>, initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, initialOnDispatch: MutableDispatchScope<State>.(Action) -> Unit = { }): CoThunkTestScope<State>","description":"com.daftmobile.redukt.test.thunk.CoThunkTestScope","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-co-thunk-test-scope.html","searchKeys":["CoThunkTestScope","fun <State> CoThunkTestScope(thunk: CoThunk<State>, initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, initialOnDispatch: MutableDispatchScope<State>.(Action) -> Unit = { }): CoThunkTestScope<State>","com.daftmobile.redukt.test.thunk.CoThunkTestScope"]},{"name":"fun <State> CoThunkTester(thunk: CoThunk<State>, initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, strict: Boolean = true)","description":"com.daftmobile.redukt.test.thunk.CoThunkTester.CoThunkTester","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-co-thunk-tester/-co-thunk-tester.html","searchKeys":["CoThunkTester","fun <State> CoThunkTester(thunk: CoThunk<State>, initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, strict: Boolean = true)","com.daftmobile.redukt.test.thunk.CoThunkTester.CoThunkTester"]},{"name":"fun <State> Thunk<State>.tester(initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, strict: Boolean = true): ThunkTester<State>","description":"com.daftmobile.redukt.test.thunk.tester","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/tester.html","searchKeys":["tester","fun <State> Thunk<State>.tester(initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, strict: Boolean = true): ThunkTester<State>","com.daftmobile.redukt.test.thunk.tester"]},{"name":"fun <State> ThunkTestScope(thunk: Thunk<State>, initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, initialOnDispatch: MutableDispatchScope<State>.(Action) -> Unit = { }): ThunkTestScope<State>","description":"com.daftmobile.redukt.test.thunk.ThunkTestScope","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-thunk-test-scope.html","searchKeys":["ThunkTestScope","fun <State> ThunkTestScope(thunk: Thunk<State>, initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, initialOnDispatch: MutableDispatchScope<State>.(Action) -> Unit = { }): ThunkTestScope<State>","com.daftmobile.redukt.test.thunk.ThunkTestScope"]},{"name":"fun <State> ThunkTester(thunk: Thunk<State>, initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, strict: Boolean = true)","description":"com.daftmobile.redukt.test.thunk.ThunkTester.ThunkTester","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-thunk-tester/-thunk-tester.html","searchKeys":["ThunkTester","fun <State> ThunkTester(thunk: Thunk<State>, initialState: State, initialClosure: DispatchClosure = EmptyDispatchClosure, strict: Boolean = true)","com.daftmobile.redukt.test.thunk.ThunkTester.ThunkTester"]},{"name":"inline fun <T> CoThunk<T>.test(initialState: T, initialClosure: DispatchClosure = EmptyDispatchClosure, strict: Boolean = true, block: CoThunkTestScope<T>.() -> Unit)","description":"com.daftmobile.redukt.test.thunk.test","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/test.html","searchKeys":["test","inline fun <T> CoThunk<T>.test(initialState: T, initialClosure: DispatchClosure = EmptyDispatchClosure, strict: Boolean = true, block: CoThunkTestScope<T>.() -> Unit)","com.daftmobile.redukt.test.thunk.test"]},{"name":"inline fun <T> Thunk<T>.test(initialState: T, initialClosure: DispatchClosure = EmptyDispatchClosure, strict: Boolean = true, block: ThunkTestScope<T>.() -> Unit)","description":"com.daftmobile.redukt.test.thunk.test","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/test.html","searchKeys":["test","inline fun <T> Thunk<T>.test(initialState: T, initialClosure: DispatchClosure = EmptyDispatchClosure, strict: Boolean = true, block: ThunkTestScope<T>.() -> Unit)","com.daftmobile.redukt.test.thunk.test"]},{"name":"inline fun test(strict: Boolean = this.strict, block: CoThunkTestScope<State>.() -> Unit)","description":"com.daftmobile.redukt.test.thunk.CoThunkTester.test","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-co-thunk-tester/test.html","searchKeys":["test","inline fun test(strict: Boolean = this.strict, block: CoThunkTestScope<State>.() -> Unit)","com.daftmobile.redukt.test.thunk.CoThunkTester.test"]},{"name":"inline fun test(strict: Boolean = this.strict, block: ThunkTestScope<State>.() -> Unit)","description":"com.daftmobile.redukt.test.thunk.ThunkTester.test","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-thunk-tester/test.html","searchKeys":["test","inline fun test(strict: Boolean = this.strict, block: ThunkTestScope<State>.() -> Unit)","com.daftmobile.redukt.test.thunk.ThunkTester.test"]},{"name":"interface CoThunkTestScope<State> : MutableDispatchScope<State> , ActionsAssertScope","description":"com.daftmobile.redukt.test.thunk.CoThunkTestScope","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-co-thunk-test-scope/index.html","searchKeys":["CoThunkTestScope","interface CoThunkTestScope<State> : MutableDispatchScope<State> , ActionsAssertScope","com.daftmobile.redukt.test.thunk.CoThunkTestScope"]},{"name":"interface ThunkTestScope<State> : MutableDispatchScope<State> , ActionsAssertScope","description":"com.daftmobile.redukt.test.thunk.ThunkTestScope","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-thunk-test-scope/index.html","searchKeys":["ThunkTestScope","interface ThunkTestScope<State> : MutableDispatchScope<State> , ActionsAssertScope","com.daftmobile.redukt.test.thunk.ThunkTestScope"]},{"name":"val initialClosure: DispatchClosure","description":"com.daftmobile.redukt.test.thunk.CoThunkTester.initialClosure","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-co-thunk-tester/initial-closure.html","searchKeys":["initialClosure","val initialClosure: DispatchClosure","com.daftmobile.redukt.test.thunk.CoThunkTester.initialClosure"]},{"name":"val initialClosure: DispatchClosure","description":"com.daftmobile.redukt.test.thunk.ThunkTester.initialClosure","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-thunk-tester/initial-closure.html","searchKeys":["initialClosure","val initialClosure: DispatchClosure","com.daftmobile.redukt.test.thunk.ThunkTester.initialClosure"]},{"name":"val initialState: State","description":"com.daftmobile.redukt.test.thunk.CoThunkTester.initialState","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-co-thunk-tester/initial-state.html","searchKeys":["initialState","val initialState: State","com.daftmobile.redukt.test.thunk.CoThunkTester.initialState"]},{"name":"val initialState: State","description":"com.daftmobile.redukt.test.thunk.ThunkTester.initialState","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-thunk-tester/initial-state.html","searchKeys":["initialState","val initialState: State","com.daftmobile.redukt.test.thunk.ThunkTester.initialState"]},{"name":"val strict: Boolean = true","description":"com.daftmobile.redukt.test.thunk.CoThunkTester.strict","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-co-thunk-tester/strict.html","searchKeys":["strict","val strict: Boolean = true","com.daftmobile.redukt.test.thunk.CoThunkTester.strict"]},{"name":"val strict: Boolean = true","description":"com.daftmobile.redukt.test.thunk.ThunkTester.strict","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-thunk-tester/strict.html","searchKeys":["strict","val strict: Boolean = true","com.daftmobile.redukt.test.thunk.ThunkTester.strict"]},{"name":"val thunk: CoThunk<State>","description":"com.daftmobile.redukt.test.thunk.CoThunkTester.thunk","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-co-thunk-tester/thunk.html","searchKeys":["thunk","val thunk: CoThunk<State>","com.daftmobile.redukt.test.thunk.CoThunkTester.thunk"]},{"name":"val thunk: Thunk<State>","description":"com.daftmobile.redukt.test.thunk.ThunkTester.thunk","location":"redukt-test-thunk/com.daftmobile.redukt.test.thunk/-thunk-tester/thunk.html","searchKeys":["thunk","val thunk: Thunk<State>","com.daftmobile.redukt.test.thunk.ThunkTester.thunk"]}]